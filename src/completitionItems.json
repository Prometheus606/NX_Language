{
    "simpleCompletitionItems": [
        {"command": "string", "icon": "Method", "docu": "Commands for string manipulation"},
        {"command": "file", "icon": "Method", "docu": "Commands for file functions"},
        {"command": "after", "icon": "Method", "docu": ""},
        {"command": "append", "icon": "Method", "docu": "appends values to the value stored in a variable.\n\nappend (variable)\n(value)"},
        {"command": "array", "icon": "Method", "docu": "Manipulate array variables"},
        {"command": "auto_execok", "icon": "Method", "docu": ""},
        {"command": "auto_import", "icon": "Method", "docu": ""},
        {"command": "auto_load", "icon": "Method", "docu": ""},
        {"command": "auto_mkindex", "icon": "Method", "docu": ""},
        {"command": "auto_mkindex_old", "icon": "Method", "docu": ""},
        {"command": "auto_qualify", "icon": "Method", "docu": ""},
        {"command": "auto_reset", "icon": "Method", "docu": ""},
        {"command": "bgerror", "icon": "Method", "docu": ""},
        {"command": "binary", "icon": "Method", "docu": ""},
        {"command": "cd", "icon": "Method", "docu": "Changes the current directory to dirName if dirName is given,\nor to the $HOME directory if dirName is not given.\nIf dirName is a tilde ~, cd changes the working\ndirectory to the users home directory. If dirName starts with\na tilde, then the rest of the characters are treated\nas a login id, and cd changes the working directory\nto that user's $HOME.\n\ncd (dirname)"},
        {"command": "clock", "icon": "Method", "docu": "clock - Obtain and manipulate dates and times."},
        {"command": "close", "icon": "Method", "docu": "Closes a file opened at runtime.\n\nclose ($filename)"},
        {"command": "concat", "icon": "Method", "docu": ""},
        {"command": "dde", "icon": "Method", "docu": ""},
        {"command": "encoding", "icon": "Method", "docu": ""},
        {"command": "eof", "icon": "Method", "docu": ""},
        {"command": "error", "icon": "Method", "docu": ""},
        {"command": "eval", "icon": "Method", "docu": "Eval takes one or more arguments, which together comprise a\nTcl script containing one or more commands.\n\neval (arg) (arg)"},
        {"command": "exec", "icon": "Method", "docu": "This command treats its arguments as the specification of one or more subprocesses to execute. The arguments take the form of a standard shell pipeline where each arg becomes one word of a command, and each distinct command becomes a subprocess.\nexec (arg) (arg)"},
        {"command": "expr", "icon": "Method", "docu": "The expr command concatenates args, separated by a space, into\nan expression, and evaluates that expression, returning its value\n\nexpr (arg)\n(arg)"},
        {"command": "fblocked", "icon": "Method", "docu": ""},
        {"command": "fconfigure", "icon": "Method", "docu": ""},
        {"command": "fcopy", "icon": "Method", "docu": ""},
        {"command": "fileevent", "icon": "Method", "docu": ""},
        {"command": "filename", "icon": "Method", "docu": ""},
        {"command": "flush", "icon": "Method", "docu": ""},
        {"command": "gets", "icon": "Method", "docu": "Read a line from a channel (a file, commandline input).\n\ngets (variable) Line"},
        {"command": "glob", "icon": "Method", "docu": ""},
        {"command": "global", "icon": "Method", "docu": "Access global variables.\n\nglobal (variable)"},
        {"command": "history", "icon": "Method", "docu": ""},
        {"command": "http", "icon": "Method", "docu": ""},
        {"command": "incr", "icon": "Method", "docu": "Increment the value of a variable.\n\nincr (variable) (value)"},
        {"command": "info", "icon": "Method", "docu": "Return information about the state of the Tcl interpreter.\n\ninfo (option) (arg) (arg)"},
        {"command": "interp", "icon": "Method", "docu": ""},
        {"command": "lappend", "icon": "Method", "docu": "Append list elements onto a variable.\n\nlappend (variable) (value) (value)"},
        {"command": "library", "icon": "Method", "docu": ""},
        {"command": "lindex", "icon": "Method", "docu": "Retrieve an element from a list.\n\nlindex (list) (index)"},
        {"command": "linsert", "icon": "Method", "docu": "appends values to the value stored in a variable.\n\nappend (variable) (value)"},
        {"command": "list", "icon": "Method", "docu": "Create a list.\n\nlist (arg) (arg)"},
        {"command": "llength", "icon": "Method", "docu": "Count the number of elements in a list.\n\nllength (list)"},
        {"command": "load", "icon": "Method", "docu": ""},
        {"command": "lrange", "icon": "Method", "docu": "Return one or more adjacent elements from a list.\n\nlrange (list) (first) (last)"},
        {"command": "lreplace", "icon": "Method", "docu": "Replace elements in a list with new elements.\n\nlreplace (list) (first) (last) (element) (element) ..."},
        {"command": "lsearch", "icon": "Method", "docu": "See if a list contains a particular element.\n\nlsearch (variable) (value)"},
        {"command": "lset", "icon": "Method", "docu": "Change an element in a list.\n\nlset (variable) (index) (new value)"},
        {"command": "lsort", "icon": "Method", "docu": "Sort the elements of a list.\n\nappend (options) (list)"},
        {"command": "memory", "icon": "Method", "docu": ""},
        {"command": "msgcat", "icon": "Method", "docu": ""},
        {"command": "namespace", "icon": "Method", "docu": "create and manipulate contexts for commands and variables."},
        {"command": "open", "icon": "Method", "docu": "Open a file-based or command pipeline channel.\nmodes:w,a,r,w+,a+,r+\n\nopen (filename) (mode)"},
        {"command": "package", "icon": "Method", "docu": "Facilities for package loading and version control.\n\nappend (variable) (value)"},
        {"command": "parray", "icon": "Method", "docu": ""},
        {"command": "pid", "icon": "Method", "docu": ""},
        {"command": "pkg::create", "icon": "Method", "docu": ""},
        {"command": "pkg_mkIndex", "icon": "Method", "docu": ""},
        {"command": "puts", "icon": "Method", "docu": "Write to a channel.\n\nputs (text)"},
        {"command": "pwd", "icon": "Method", "docu": "Prints the absolute path of the current working directory"},
        {"command": "regexp", "icon": "Method", "docu": "Searches for the regular expression in the string\n\nregexp {pattern} $string matchVar"},
        {"command": "regsub", "icon": "Method", "docu": "Replaces parts of the string according to the regular expression\n\nregsub {pattern} $string {replacement} result"},
        {"command": "re_syntax", "icon": "Method", "docu": ""},
        {"command": "read", "icon": "Method", "docu": "Read from a channel.\n\nread (variable or file)"},
        {"command": "registry", "icon": "Method", "docu": ""},
        {"command": "rename", "icon": "Method", "docu": "Rename or delete a command.\n\nrename (oldname) (newname)"},
        {"command": "resource", "icon": "Method", "docu": ""},
        {"command": "scan", "icon": "Method", "docu": "Parse string using conversion specifiers in the style of sscanf."},
        {"command": "seek", "icon": "Method", "docu": ""},
        {"command": "set", "icon": "Method", "docu": "Read and write variables.\n\nset (variablenname) (value)"},
        {"command": "socket", "icon": "Method", "docu": ""},
        {"command": "SafeBase", "icon": "Method", "docu": ""},
        {"command": "source", "icon": "Method", "docu": "Evaluate a file or resource as a Tcl script"},
        {"command": "split", "icon": "Method", "docu": "Split a string into a proper Tcl list.\n\nsplit (string) (splitchars)"},
        {"command": "stdin", "icon": "Method", "docu": "A part of stdio, this file handle is opened by\ndefault for each application making use of the stdio package\nof code. It is also the name of the standard\ninput channel in Tcl (though Tcl doesn't use stdio). This\ninput file may correspond to a disk file, pipe, terminal\ndevice, or other construct.To refer to the stdin filehandle in\nTcl, use the string stdin as the channel name when\nusing gets."},
        {"command": "stdout", "icon": "Method", "docu": "a part of stdio, this filehandle is opened by default\nfor each application making use of the stdio package of\ncode.This output file may correspond to a disk file, pipe,\nterminal device, or other construct.To refer to this output filehandle\nin Tcl, use the string stdout when using puts."},
        {"command": "subst", "icon": "Method", "docu": ""},
        {"command": "Tcl", "icon": "Method", "docu": ""},
        {"command": "tcl_endOfWord", "icon": "Method", "docu": ""},
        {"command": "tcl_findLibrary", "icon": "Method", "docu": ""},
        {"command": "tcl_startOfNextWord", "icon": "Method", "docu": ""},
        {"command": "tcl_startOfPreviousWord", "icon": "Method", "docu": ""},
        {"command": "tcl_wordBreakAfter", "icon": "Method", "docu": ""},
        {"command": "tcl_wordBreakBefore", "icon": "Method", "docu": ""},
        {"command": "tcltest", "icon": "Method", "docu": ""},
        {"command": "tclvars", "icon": "Method", "docu": ""},
        {"command": "tell", "icon": "Method", "docu": ""},
        {"command": "time", "icon": "Method", "docu": ""},
        {"command": "trace", "icon": "Method", "docu": ""},
        {"command": "unknown", "icon": "Method", "docu": ""},
        {"command": "unset", "icon": "Method", "docu": "Delete variables.\n\nunset (variables"},
        {"command": "update", "icon": "Method", "docu": ""},
        {"command": "uplevel", "icon": "Method", "docu": ""},
        {"command": "upvar", "icon": "Method", "docu": ""},
        {"command": "variable", "icon": "Method", "docu": "create and initialize a namespace variable."},
        {"command": "vwait", "icon": "Method", "docu": "Process events until a variable is written.\n\nvwait (varname)"},
        {"command": "argv", "icon": "Method", "docu": "argument list"},
        {"command": "argc", "icon": "Method", "docu": "argument count"},
        {"command": "arg0", "icon": "Method", "docu": "programmname"},
        {"command": "VMOV", "icon": "Interface", "docu": "This function copies a vector or matrix to an other\none.\n\n\nVMOV (n) (p1) (p2)"},
        {"command": "hiset", "icon": "Interface", "docu": "This function checks if a variable is set or not.\n\n\nhiset\n(v1)"},
        {"command": "isset", "icon": "Interface", "docu": "\n\nisset (v1)"},
        {"command": "OUTPUT_adr", "icon": "Interface", "docu": "This function provides a way to check nc code addresses\nbefore writing the to the nc code.\n\n\nOUTPUT_adr (args)"},
        {"command": "join ", "icon": "Method", "snippet": "join ${1:string1} ${2:''}$0", "docu": "Join converts a Tcl list into a string. It glues together the elements of a list using a supplied string as element separator. Default is a space."},
        {"command": "format ", "icon": "Method", "snippet": "format ${1:%d} ${2:string}$0", "docu": "Format a string in the style of sprintf\n\nformat (formatString) (arg) (arg) ..."}

    ],

    "provideCompletionItems": {
        "EQ": [
            {"command": "EQ_is_equal ", "icon": "Interface", "docu": "This function checks if two given values are equal within\na given tolerance.\n\n\nEQ_is_equal (s) (t) (tol)"},
            {"command": "EQ_is_ge ", "icon": "Interface",  "docu": "This function checks if value1 is greater or equal (_ge)\nthan value 2 within a given tolerance.\n\n\nEQ_is_ge (s) (t) (tol)"},
            {"command": "EQ_is_gt ", "icon": "Interface",  "docu": "This function checks if value1 is greater than (_gt) value\n2 within a given tolerance.\n\n\nEQ_is_gt (s) (t) (tol)"},
            {"command": "EQ_is_le ", "icon": "Interface",  "docu": "This function checks if value1 is less or equal (_le)\nthan value 2 within a given tolerance.\n\n\nEQ_is_le (s) (t) (tol)"},
            {"command": "EQ_is_lt ", "icon": "Interface",  "docu": "This function checks if value1 is less than (_lt) value\n2 within a given tolerance.\n\n\nEQ_is_lt (s) (t) (tol)"},
            {"command": "EQ_is_zero ", "icon": "Interface",  "docu": "This function checks if a given value is zero within\na given tolerance.\n\n\nEQ_is_zero (s) (tol)"}
        ],
        "MTX": [
            {"command": "MTX3_init_x_y_z ", "icon": "Interface", "docu": "This function initializes a matrix from given x, y and\nz vectors.\nMTX3_init_x_y_z (u, v, w, r) r = (u, v,\nw)   Initialize a matrix from\ngiven x, y and\nz vectors\n\n\nMTX3_init_x_y_z (u) (v) (w) (r)"},
            {"command": "MTX3_is_equal ", "icon": "Interface", "docu": "This function determines if two matrices are equal within mom_system_tolerance.\nMTX3_is_equal(m,n,a)\n  (m == n)   Determine if two\nmatrices\nare equal.\n\n\nMTX3_is_equal (m) (n) (count)"},
            {"command": "MTX3_multiply ", "icon": "Interface", "docu": "This function multiplies two matrices.\nMTX3_multiply(m, n, r)   r\n= ( m X n )   Matrix multiplication\n\n\nMTX3_multiply\n(m) (n) (r)"},
            {"command": "MTX3_transpose ", "icon": "Interface", "docu": "This function transposes a matrix.\nMTX3_transpose(m, r)   r =\ntrns(m)   Transpose of matrix\n\n\nMTX3_transpose (m) (r)"},
            {"command": "MTX3_scale ", "icon": "Interface", "docu": "This function scales a matrix with factor s.\nMTX3_scale(s,r)  \nr = (s*(u))   Scale a matrix by s\n\n\nMTX3_scale\n(s) (r)"},
            {"command": "MTX3_sub ", "icon": "Interface", "docu": "This function substracts one matrix from another matrix.\nMTX3_sub(m,n,r)  \nr = (m - n)   Matrix subtraction\n\n\nMTX3_sub (m)\n(n) (r)"},
            {"command": "MTX3_add ", "icon": "Interface", "docu": "This function performs a matrix addition.\nMTX3_add(m,n,r)   r =\n(m + n)   Matrix addition\n\n\nMTX3_add (m) (n) (r)"},
            {"command": "MTX3_vec_multiply ", "icon": "Interface", "docu": "This function performs a vector / matrix multiplication.\nMTX3_vec_multiply(u, m, w)\n  w = (u X m)   Vector/matrix\nmultiplication\n\n\nMTX3_vec_multiply (u) (m) (w)"},
            {"command": "MTX3_x ", "icon": "Interface", "docu": "This function returns the first column vector (X-vector) of a\nmatrix.\nMTX3_x(m, w)   w = (1st column)  \nFirst column vector of matrix\n\n\nMTX3_x (m) (w)"},
            {"command": "MTX3_y ", "icon": "Interface", "docu": "This function returns the second column vector (Y-vector) of a\nmatrix.\nMTX3_y(m, w)   w = (2nd column)  \nSecond column vector of matrix\n\n\nMTX3_y (m) (w)"},
            {"command": "MTX3_z ", "icon": "Interface", "docu": "This function returns the third column vector (Z-vector) of a\nmatrix.\nMTX3_z(m, w)   w = (3rd column)  \nThird column vector of matrix\n\n\nMTX3_z (m) (w)"}
        ],
        "VEC": [
            {"command": "VEC3_add ", "icon": "Interface", "docu": "This function performs a vector addition.\nVEC3_add(u,v,w)   w =\nu + v   Vector addition\n\n\nVEC3_add (u) (v) (w)"},
            {"command": "VEC3_cross ", "icon": "Interface", "docu": "This function calculates the vector cross product.\nVEC3_cross(u,v,w)   w\n= ( u X v )   Vector cross\nproduct\n\n\nVEC3_cross (u) (v) (w)"},
            {"command": "VEC3_dot ", "icon": "Interface", "docu": "This function calculates the vector dot product of normalized input\nvectors.\nVEC3_dot(u,v)   (u dot v)   Vector dot\nproduct (u &amp; v normalized)\n\n\nVEC3_dot (u) (v)"},
            {"command": "VEC3_dot_A ", "icon": "Interface", "docu": "This function calculates the vector dot product. Input vectors don't\nneed to be normalized.\nVEC3_dot_A(u,v)   (u dot v) \n Vector dot product (u &amp; v not necessarily normalized)\n\n\nVEC3_dot_A\n(u) (v)"},
            {"command": "VEC3_init ", "icon": "Interface", "docu": "This function initialize a vector from a coordinate value. This\nis useful to create a vector\nfrom given variables.\nVEC3_init(x,y,z,w)  \nw = (x, y, z)   Initialize a vector\nfrom\ncoordinates (passed as variables)\n\n\nVEC3_init (x) (y) (z) (w)"},
            {"command": "VEC3_init_s ", "icon": "Interface", "docu": "This function initialize a vector from scalar values. This is\nuseful to create a vector\ndirectly from given values.\nVEC3_init_s(x,y,z,w)  \nw = (x, y, z)   Initialize a vector\nfrom\ncoordinates (passed as scalars)\n\n\nVEC3_init_s (x) (y) (z) (w)"},
            {"command": "VEC3_is_equal ", "icon": "Interface", "docu": "This function checks if two given vectors are equal within\na given tolerance.\nVEC3_is_equal(u,v,tol)   (||(u-v)|| ( tol)  \nAre vectors equal?\n\n\nVEC3_is_equal (u) (v) (tol)"},
            {"command": "VEC3_is_zero ", "icon": "Interface", "docu": "This function checks if a given vector is zero.\nVEC3_is_zero(u,tol) \n (|| u || ( tol)   Is vector\nzero?\n\n\nVEC3_is_zero (u)"},
            {"command": "VEC3_mag ", "icon": "Interface","docu": "VEC3_mag(u)   ( || u || )  \nVector magnitude\n\n\nVEC3_mag (u)"},
            {"command": "VEC3_negate ", "icon": "Interface", "docu": "This function negates a given vector.\nVEC3_negate(u,w)   w =\n(-u)   Vector negate\n\n\nVEC3_negate (u) (w)"},
            {"command": "VEC3_scale ", "icon": "Interface", "docu": "This function scales a vector by a given scale.\nVEC3_scale(s,u,w) \n w = (s*u)   Vector scale\n\n\nVEC3_scale (s) (u)\n(w)"},
            {"command": "VEC3_sub ", "icon": "Interface", "docu": "This function substracts one vector from another vector.\nVEC3_sub(u,v,w)  \nw = u - v   Vector subtraction\n\n\nVEC3_sub (u)\n(v) (w)"},
            {"command": "VEC3_unitize ", "icon": "Interface", "docu": "This function results the unit vector (or normalized vector) of\nan given vector in space.\nVEC3_unitize(u,w)   *len = ||\nu ||   Vector unitization\n\n\nVEC3_unitize (u) (w)"},
            {"command": "VEC3_rotate_arbitary_axis ", "icon": "Interface", "docu": "This function rotates a vector around an arbitary axis.\n\n\nVEC3_rotate_arbitary_axis (axis)\n(angle) (input_vector) (output_vector)"},
            {"command": "VEC3_dist_point_line ", "icon": "Interface", "docu": "This function calculates the shortest distance between a given point\nand a line.\nIt is the distance from the point perpendicular\nto the line.\n\n\nVEC3_dist_point_line (_u) (_v) (_w)"},
            {"command": "VEC3_angle_3points ", "icon": "Interface", "docu": "This function calculates the angle between three points.\n\n\nVEC3_angle_3points (_u) (_v)\n(_w)"},
            {"command": "VEC3_angle_between ", "icon": "Interface", "docu": "This function calculates the angle between two vectors. The input\nvectors do not need\nto be unitized.\n\n\nVEC3_angle_between (vec1) (vec2) (return_unit)"},
            {"command": "VEC3_is_parallel ", "icon": "Interface", "docu": "This function checks if two vectors are parallel or not.\n\n\nVEC3_is_parallel\n(u) (v)"}
        ],
        "mom": [
            {"command": "mom_kin_4th_axis_ang_offset", "icon": "Variable", "docu": "Defines an angular value that is added to the fourth\naxis rotary angle.&nbsp; This is used when a tool axis\nof (0,0,1) does not result in a position of zero\nposition.\n\nNumeric Value"},
            {"command": "mom_kin_4th_axis_center_offset", "icon": "Variable", "docu": "For four and five axis milling machines.&nbsp; Defines the distance\nfrom the center of the rotary table to machine tool\nzero position.\n\nNumeric Array(3)"},
            {"command": "mom_kin_4th_axis_direction", "icon": "Variable", "docu": "Defines how the fourth axis rotary positions will be output.&nbsp;\nThe mom variable mom_out_angle_pos(0) will contain the rotary value.&nbsp; For\nexample move table or head from 90 to 45 degrees.\nMAGNITUDE_DETERMINES_DIRECTION would output: Shortest 45, CLW 405, CCLW 45.&nbsp; SIGN_DETERMINES_DIRECTION\nwould output: Shortest -45, CLW 45, CCLW -45.&nbsp;\n\nMAGNITUDE_DETERMINES_DIRECTION, SIGN_DETERMINES_DIRECTION"},
            {"command": "mom_kin_4th_axis_incr_switch", "icon": "Variable", "docu": "Determines whether the fourth axis rotary coordinates will be incremental\nor absolute.&nbsp; This value is toggled ON, OFF in the\nmachine tool dialog in Post Builder.\n\nON (incremental) or OFF (absolute)"},
            {"command": "mom_kin_4th_axis_leader", "icon": "Variable", "docu": "The leader for the fourth axis.&nbsp; This is typically A,\nB or C."},
            {"command": "mom_kin_4th_axis_limit_action", "icon": "Variable", "docu": "Defines the action that takes place when there is a\nrotary axis violation for the fourth axis.&nbsp; The options are\nto output a warning or to retract to a clearance\nplane, rotate the axis, and re-engage to the part.\n\nWarning or\nRetract / Reengage"},
            {"command": "mom_kin_4th_axis_max_limit", "icon": "Variable", "docu": "The maximum rotary position of the fourth axis"},
            {"command": "mom_kin_4th_axis_min_incr", "icon": "Variable", "docu": "Defines the resolution of your table or head.&nbsp; Enter one\nif your table or head positions to one degree increments.&nbsp;\nFor full contouring axis, enter 0.001.\n\nAny number greater than zero."},
            {"command": "mom_kin_4th_axis_min_limit", "icon": "Variable", "docu": "The minimum rotary position of the fourth axis"},
            {"command": "mom_kin_4th_axis_plane", "icon": "Variable", "docu": "Defines the plane of rotation of the rotary axis.\n\nXY, ZX,\nYZ"},
            {"command": "mom_kin_4th_axis_rotation", "icon": "Variable", "docu": "Defines the direction of rotation of the rotary axis.&nbsp; Occasionally,\ntables are installed incorrectly.&nbsp; The setting allows you to compensate\nfor tables that rotate in a non-standard manner.&nbsp; In the\nXY plane, looking down the Z axis from positive to\nnegative, rotation to a larger angle is standard.&nbsp; In the\nZX plane, looking down the Y axis from positive to\nnegative, rotation to a larger angle is standard.  In\nthe YZ plane, looking down the X axis from positive\nto negative, rotation to a larger angle is standard.\n\nSTANDARD, REVERSE"},
            {"command": "mom_kin_4th_axis_type", "icon": "Variable", "docu": "Defines how the rotary axis rotates.&nbsp; If Head, then tool\nitself tilts about a pivot point.&nbsp; If Table, then the\npart rotates.\n\nHead or Table"},
            {"command": "mom_kin_4th_axis_zero", "icon": "Variable", "docu": "Defines an offset that will be added to the rotary\nposition. This offset is used when a (0,0,1) tool axis\nresults in an angle other than zero.\n\nNumeric Value"},
            {"command": "mom_kin_5th_axis_ang_offset", "icon": "Variable", "docu": "Defines an angular value that is added to the fifth\naxis rotary angle. This is used when a tool axis\nof (0,0,1) does not result in a position of zero\naxis rotation.\n\nNumeric Value"},
            {"command": "mom_kin_5th_axis_center_offset", "icon": "Variable", "docu": "Defines the distance from the center of rotation of the\nfourth axis to the center of rotation of the fifth\naxis.&nbsp; If the axis vector of the fourth axis passes\nthrough the center of the fifth axis, then this distance\nis zero.\n\nNumeric Array(3)"},
            {"command": "mom_kin_5th_axis_direction", "icon": "Variable", "docu": "Defines how the fifth axis rotary positions will be output.&nbsp;\nThe mom variable mom_out_angle_pos(1) will contain the rotary value.&nbsp; For\nexample move table or head from 90 to 45 degrees.\nMAGNITUDE_DETERMINES_DIRECTION would output: Shortest 45, CLW 405, CCLW 45.&nbsp; SIGN_DETERMINES_DIRECTION\nwould output: Shortest -45, CLW 45, CCLW -45.&nbsp;\n\nMAGNITUDE_DETERMINES_DIRECTION, SIGN_DETERMINES_DIRECTION"},
            {"command": "mom_kin_5th_axis_incr_switch", "icon": "Variable", "docu": "Determines whether the fifth axis rotary coordinates will be incremental\nor absolute.&nbsp; This value is toggled ON, OFF in the\nmachine tool dialog in Post Builder.\n\nON (incremental) or OFF (absolute)"},
            {"command": "mom_kin_5th_axis_leader", "icon": "Variable", "docu": "The leader for the fourth axis.&nbsp; This is typically A,\nB or C."},
            {"command": "mom_kin_5th_axis_limit_action", "icon": "Variable", "docu": "Defines the action that takes place when there is a\nrotary axis violation for the fifth axis.&nbsp; The options are\nto output a warning or to retract to a clearance\nplane, rotate the axis, and re-engage to the part.\n\nWarning or\nRetract / Reengage"},
            {"command": "mom_kin_5th_axis_max_limit", "icon": "Variable", "docu": "The maximum rotary position of the fifth axis.\n\nAny number greater\nthan zero."},
            {"command": "mom_kin_5th_axis_min_incr", "icon": "Variable", "docu": "Defines the resolution of your table or head.&nbsp; Enter one\nif your table or head positions to one degree increments.&nbsp;\nFor full contouring axis, enter 0.001.\n\nAny number greater than zero."},
            {"command": "mom_kin_5th_axis_min_limit", "icon": "Variable", "docu": "The minimum rotary position of the fifth axis"},
            {"command": "mom_kin_5th_axis_plane", "icon": "Variable", "docu": "Defines the plane of rotation of the rotary axis.\n\nXY, ZX,\nYZ"},
            {"command": "mom_kin_5th_axis_rotation", "icon": "Variable", "docu": "Defines the direction of rotation of the rotary axis.&nbsp; Occasionally,\ntables are installed incorrectly.&nbsp; The setting allows you to compensate\nfor tables that rotate in a non-standard manner.&nbsp; In the\nXY plane, looking down the Z axis from positive to\nnegative, rotation to a larger angle is standard.&nbsp; In the\nZX plane, looking down the Y axis from positive to\nnegative, rotation to a larger angle is standard.  In\nthe YZ plane, looking down the X axis from positive\nto negative, rotation to a larger angle is standard.\n\nSTANDARD, REVERSE"},
            {"command": "mom_kin_5th_axis_type", "icon": "Variable", "docu": "Defines how the rotary axis rotates.&nbsp; If Head, then tool\nitself tilts about a pivot point.&nbsp; If Table, then the\npart rotates.\n\nHead or Table"},
            {"command": "mom_kin_5th_axis_zero", "icon": "Variable", "docu": "Defines an offset that will be added the rotary position.\nThis offset is used when a (0,0,1) tool axis results\nin an angle other than zero.\n\nNumeric Value"},
            {"command": "mom_kin_arc_output_mode", "icon": "Variable", "docu": "Defines how circles will be output by the post.&nbsp; Only\ncircles generated in the operation can be output as circles.&nbsp;\nLINEAR will output linear moves based on the tolerances defined\non the arc in the operation.&nbsp; QUADRANT will output circles\nonly on quadrant boundaries.&nbsp; FULL_CIRCLE will output arcs up to\n360 degrees. \n\nFULL_CIRCLE, QUADRANT, LINEAR"},
            {"command": "mom_kin_arc_valid_planes", "icon": "Variable", "docu": "Defines the planes in which arcs can be output.&nbsp; XYZ\nmeans XY, YZ or ZX.&nbsp; Lathe posts can only output\nin the XZ plane.&nbsp; ANY is not currently available.\n\nXYZ, XY,\nYZ, ZX, ANY"},
            {"command": "mom_kin_caxis_rotary_pos", "icon": "Variable", "docu": "Used for mill turns to establish a base C axis\nposition.\n\n0-360"},
            {"command": "mom_kin_clamp_time", "icon": "Variable", "docu": "Defines the time to be used in time calculations for\nclamping operations.\n\nAny number greater than or equal to zero."},
            {"command": "mom_kin_coordinate_system_type", "icon": "Variable", "docu": "Defines the type of coordinate system defined in the operation.&nbsp;\nLOCAL is the default.&nbsp; This coordinate system type can be\nused to define a G54 type work coordinate system.&nbsp; MAIN\ncan be used to output coordinates that are relative to\nthe main or master coordinate system.&nbsp; The main coordinate system\nis defined as the one that defines the machine tool\nzero. CSYS defines a coordinate system that is local, but\nuses a postprocessor that outputs G68 or G7 (cycle 19)\nto define a working coordinate system.\n\nLOCAL, MAIN, or CSYS"},
            {"command": "mom_kin_dependent_head", "icon": "Variable", "docu": "For lathe only.&nbsp; Defines the name of the dependent head.&nbsp;\nThis name is specified on the TURRET UDE or the\nmachine dialog in the operation.&nbsp; When the dependent head is\nspecified in the operation, the distance from the dependent head\nto the independent head is applied. The distance is defined\nwith the mom variables mom_kin_ind_to_dependent_head_x and mom_kin_ind_to_dependent_head_z\n\nFRONT, REAR, RIGHT, LEFT,\nSIDE, SADDLE, NONE"},
            {"command": "mom_kin_helical_arc_output_mode", "icon": "Variable", "docu": "Defines how helix motion is output by NX Post.&nbsp; Only\nhelical motion in the operation can be output as helix\nblocks by the post.&nbsp; NX Post will output the helix\nas a series of linear GOTOs, a helix for every\nquadrant, a helix for each 360 degrees or one helix\nfor the entire circle. LINEAR will output the entire helix\nwith linear moves based on the tolerances defined for the\narc in the operation.&nbsp; QUADRANT will output a helix record\nfor each 90 degrees of helix.&nbsp; FULL_CIRCLE will output helix\nrecord for each 360 degrees of helix.&nbsp; END_POINT will ouput\nentire\nhelix&nbsp;\ninto\na\nsingle\nblock.&nbsp;\nEach\npostprocessor\nwill\nthen\nformat the helix data.\n\nFULL_CIRCLE, QUADRANT, LINEAR,END_POINT"},
            {"command": "mom_kin_holder1_offset_x", "icon": "Variable", "docu": "Defines the X value of the offset for the right\nangle head defined by HOLDER,"},
            {"command": "mom_kin_holder1_offset_y", "icon": "Variable", "docu": "Defines the Y value of the offset for the right\nangle head defined by HOLDER,"},
            {"command": "mom_kin_holder1_offset_z", "icon": "Variable", "docu": "Defines the Z value of the offset for the right\nangle head defined by HOLDER,"},
            {"command": "mom_kin_holder1_orientation", "icon": "Variable", "docu": "Defines the orientation of the right angle head.&nbsp; The right\nangle head may be defined along any of the principal\naxes. Up to six holders may be defined.&nbsp; Use the\nmom variables mom_kin_holder1_offset_x, mom_kin_holder1_offset_y and mom_kin_holder1_offset_z to define the distance\nfrom the gage point.&nbsp; The UDE LOAD/HOLDER,n may be used\nto activate the right angle head in an operation.\n\nPOSX, POSY,\nPOSZ, NEGX, NEGY, NEGZ"},
            {"command": "mom_kin_holder2_offset_x", "icon": "Variable", "docu": "Defines the X value of the offset for the right\nangle head defined by HOLDER,"},
            {"command": "mom_kin_holder2_offset_y", "icon": "Variable", "docu": "Defines the Y value of the offset for the right\nangle head defined by HOLDER,"},
            {"command": "mom_kin_holder2_offset_z", "icon": "Variable", "docu": "Defines the Z value of the offset for the right\nangle head defined by HOLDER,"},
            {"command": "mom_kin_holder2_orientation", "icon": "Variable", "docu": "Defines the orientation of the right angle head.&nbsp; The right\nangle head may be defined along any of the principal\naxes. Up to six holders may be defined.&nbsp; Use the\nmom variables mom_kin_holder1_offset_x, mom_kin_holder1_offset_y and mom_kin_holder1_offset_z to define the distance\nfrom the gage point.&nbsp; The UDE LOAD/HOLDER,n may be used\nto activate the right angle head in an operation.\n\nPOSX, POSY,\nPOSZ, NEGX, NEGY, NEGZ"},
            {"command": "mom_kin_holder3_offset_x", "icon": "Variable", "docu": "Defines the X value of the offset for the right\nangle head defined by HOLDER,"},
            {"command": "mom_kin_holder3_offset_y", "icon": "Variable", "docu": "Defines the Y value of the offset for the right\nangle head defined by HOLDER,"},
            {"command": "mom_kin_holder3_offset_z", "icon": "Variable", "docu": "Defines the Z value of the offset for the right\nangle head defined by HOLDER,"},
            {"command": "mom_kin_holder3_orientation", "icon": "Variable", "docu": "Defines the orientation of the right angle head.&nbsp; The right\nangle head may be defined along any of the principal\naxes. Up to six holders may be defined.&nbsp; Use the\nmom variables mom_kin_holder1_offset_x, mom_kin_holder1_offset_y and mom_kin_holder1_offset_z to define the distance\nfrom the gage point.&nbsp; The UDE LOAD/HOLDER,n may be used\nto activate the right angle head in an operation.\n\nPOSX, POSY,\nPOSZ, NEGX, NEGY, NEGZ"},
            {"command": "mom_kin_holder4_offset_x", "icon": "Variable", "docu": "Defines the X value of the offset for the right\nangle head defined by HOLDER,"},
            {"command": "mom_kin_holder4_offset_y", "icon": "Variable", "docu": "Defines the Y value of the offset for the right\nangle head defined by HOLDER,"},
            {"command": "mom_kin_holder4_offset_z", "icon": "Variable", "docu": "Defines the Z value of the offset for the right\nangle head defined by HOLDER,"},
            {"command": "mom_kin_holder4_orientation", "icon": "Variable", "docu": "Defines the orientation of the right angle head.&nbsp; The right\nangle head may be defined along any of the principal\naxes. Up to six holders may be defined.&nbsp; Use the\nmom variables mom_kin_holder1_offset_x, mom_kin_holder1_offset_y and mom_kin_holder1_offset_z to define the distance\nfrom the gage point.&nbsp; The UDE LOAD/HOLDER,n may be used\nto activate the right angle head in an operation.\n\nPOSX, POSY,\nPOSZ, NEGX, NEGY, NEGZ"},
            {"command": "mom_kin_holder5_offset_x", "icon": "Variable", "docu": "Defines the X value of the offset for the right\nangle head defined by HOLDER,"},
            {"command": "mom_kin_holder5_offset_y", "icon": "Variable", "docu": "Defines the Y value of the offset for the right\nangle head defined by HOLDER,"},
            {"command": "mom_kin_holder5_offset_z", "icon": "Variable", "docu": "Defines the Z value of the offset for the right\nangle head defined by HOLDER,"},
            {"command": "mom_kin_holder5_orientation", "icon": "Variable", "docu": "Defines the orientation of the right angle head.&nbsp; The right\nangle head may be defined along any of the principal\naxes. Up to six holders may be defined.&nbsp; Use the\nmom variables mom_kin_holder1_offset_x, mom_kin_holder1_offset_y and mom_kin_holder1_offset_z to define the distance\nfrom the gage point.&nbsp; The UDE LOAD/HOLDER,n may be used\nto activate the right angle head in an operation.\n\nPOSX, POSY,\nPOSZ, NEGX, NEGY, NEGZ"},
            {"command": "mom_kin_holder6_offset_x", "icon": "Variable", "docu": "Defines the X value of the offset for the right\nangle head defined by HOLDER,"},
            {"command": "mom_kin_holder6_offset_y", "icon": "Variable", "docu": "Defines the Y value of the offset for the right\nangle head defined by HOLDER,"},
            {"command": "mom_kin_holder6_offset_z", "icon": "Variable", "docu": "Defines the Z value of the offset for the right\nangle head defined by HOLDER,"},
            {"command": "mom_kin_holder6_orientation", "icon": "Variable", "docu": "Defines the orientation of the right angle head.&nbsp; The right\nangle head may be defined along any of the principal\naxes. Up to six holders may be defined.&nbsp; Use the\nmom variables mom_kin_holder1_offset_x, mom_kin_holder1_offset_y and mom_kin_holder1_offset_z to define the distance\nfrom the gage point.&nbsp; The UDE LOAD/HOLDER,n may be used\nto activate the right angle head in an operation.\n\nPOSX, POSY,\nPOSZ, NEGX, NEGY, NEGZ"},
            {"command": "mom_kin_iks_usage", "icon": "Variable", "docu": "Defines the version of inverse kinematics processing that is desired.&nbsp;\nThis defines how the X,Y,Z,I,J,K is converted to X,Y,Z,A,B for\nfour and five axis machine tools.&nbsp; A value of 0\nmeans that the legacy IKS (inverse kinematics solver) in NX2\nwill be used.&nbsp; A value of 1 means that the\nnew IKS available only in NX3 and later will be\nused. In Post Builder v3.4 and later mom_kin_iks_usage is set\nto 1 and the new IKS will be used \nNote that non-ortogonal axes and the head object are only\navailable with the new IKS.\n\n0 or 1"},
            {"command": "mom_kin_ind_to_dependent_head_x", "icon": "Variable", "docu": "For Lathe only, the distance from the independent head to\nthe dependent head along the X axis.\n\nNumeric Value"},
            {"command": "mom_kin_ind_to_dependent_head_z", "icon": "Variable", "docu": "For Lathe only, the distance from the independent head to\nthe dependent head along the X axis.\n\nNumeric Value"},
            {"command": "mom_kin_independent_head", "icon": "Variable", "docu": "For lathe only.&nbsp; Defines the name of the independent head.&nbsp;\nThis name is specified on the TURRET UDE or the\nmachine dialog in the operation.&nbsp; When the independent head is\nspecified in the operation the distance from the dependent head\nto the independent head is not applied . \n\nFRONT, REAR,\nRIGHT, LEFT, SIDE, SADDLE, NONE"},
            {"command": "mom_kin_is_turbo_output", "icon": "Variable", "docu": "Defines whether the post will use the special turbo block\ntemplates and ignore all custom commands for Linear, Circular and\nRapid moves.&nbsp; A special custom command needs to be imported\nfrom POSTBUILD/pblib/custom_command/ directory. Turbo mode will optimize post-process performance by\na factor of 5.\n\nTRUE or FALSE"},
            {"command": "mom_kin_linearization_flag", "icon": "Variable", "docu": "Defines whether linearization will be on by default. This can\nbe changed during post runtime with the LINTOL UDE.\n\nString"},
            {"command": "mom_kin_linearization_tol", "icon": "Variable", "docu": "The default linearization tolerance used when LINTOL/ON is specified or\nlinearization is turned on by default.\n\nAny number greater than zero."},
            {"command": "mom_kin_machine_resolution", "icon": "Variable", "docu": "Defines the resolution used for rounding all coordinate data.&nbsp; By\ndefault this value is synchronized with the number of digits,\nif you change the number of digits, you must also\nchange this value.\n\nAny number greater than zero."},
            {"command": "mom_kin_machine_type", "icon": "Variable", "docu": "Defines the basic machine type.&nbsp; The type of machine determines\nhow motion and post commands will be processed and output.\n\n3_axis_mill,\n3_axis_mill_turn, 4_axis_head, 4_axis_table,   5_axis_dual_table, 5_axis_dual_head,   5_axis_head_table,\n2_axis_wedm, 4_axis_wedm, 2_axis_lathe."},
            {"command": "mom_kin_max_arc_radius", "icon": "Variable", "docu": "Defines largest arc radius that can be programmed.&nbsp; Any arc\nwith a radius larger than the maximum will output as\nlinear gotos.\n\nAny number greater than zero."},
            {"command": "mom_kin_max_fpm", "icon": "Variable", "docu": "Defines the maximum IPM or MMPM allowed.\n\nAny number greater than\nzero."},
            {"command": "mom_kin_max_fpr", "icon": "Variable", "docu": "Defines the maximum IPR or MMPR allowed.\n\nAny number greater than\nzero."},
            {"command": "mom_kin_min_arc_length", "icon": "Variable", "docu": "Defines the smallest arc that can be output before the\npost defaults to linear interpolation.\n\nAny number greater than zero."},
            {"command": "mom_kin_min_fpm", "icon": "Variable", "docu": "Defines the minimum IPM or MMPM that can be output.\n\nAny\nnumber greater than zero."},
            {"command": "mom_kin_min_fpr", "icon": "Variable", "docu": "Defines the minimum IPR or MMPR that can be output.\n\nAny\nnumber greater than zero."},
            {"command": "mom_kin_output_unit", "icon": "Variable", "docu": "Defines the units for all coordinate and feedrate output.&nbsp; NX\nPost will convert the input coordinates and feedrates units into\nthe mom_kin_output_unit if they are different.&nbsp;\n\nIN or MM"},
            {"command": "mom_kin_pivot_dist_vec", "icon": "Variable", "docu": "For four and five axis tilting head machine tools only.\nDefines the vector from the pivot point of the tilting\nrotary axis to gage point.&nbsp; This vector is added to\nthe tool length to determine the effective length of the\ntool.&nbsp; If the mom variable mom_kin_pivot_gauge_offset is also set, the\nmom variable mom_kin_pivot_dist_vec will be used. If mom_kin_pivot_gauge_offset is set\nand mom_kin_pivot_dist_vec is not set, then the post will use\nthe vector (0,0,mom_kin_pivot_gauge_offset) as the pivot offset vector.\n\nNumeric Array(3)"},
            {"command": "mom_kin_pivot_gauge_offset", "icon": "Variable", "docu": "For four and five axis tilting head machine tools only.\nDefines the distance from the pivot point of the tilting\nrotary axis to gage point.&nbsp; This value can be negative.&nbsp;\nThis value is added to the tool length to determine\nthe effective length of the tool.\n\nNumeric Value"},
            {"command": "mom_kin_rapid_feed_rate", "icon": "Variable", "docu": "Defines the rapid traverse for the machine tool.&nbsp; This value\nis used for time calculations for all rapid and positioning\nmoves.\n\nAny number greater than or equal to zero."},
            {"command": "mom_kin_read_ahead_next_motion", "icon": "Variable", "docu": "Defines whether the post will read ahead for the next\nmotion. If this variable is defined to any value, the\nread ahead will take place.&nbsp; The read ahead will also\nkeep track of all post commands encountered while reading ahead.&nbsp;\nSee the variables in the class Read_Ahead for details.\n\nString"},
            {"command": "mom_kin_reengage_distance", "icon": "Variable", "docu": "Used by the function that automatically retracts and re-engages when\na rotary limit is violated.&nbsp; Establishes the distance above the\npart along the spindle axis to re-engage.\n\nAny number greater than\nor equal to zero."},
            {"command": "mom_kin_retract_plane", "icon": "Variable", "docu": "Used by the function that automatically retracts and re-engages when\na rotary limit is violated.&nbsp; Establishes either a cylindrical clearance\nfor four axis or a spherical clearance for five axis\ndistance above the part for the tool to retract.&nbsp; The\ndistance is measured from the center.\n\nAny number greater than or\nequal to zero."},
            {"command": "mom_kin_rotary_reengage_feedrate", "icon": "Variable", "docu": "Used by the function that automatically retracts and re-engages when\na rotary limit is violated.&nbsp; Establishes the Feedrate used to\nre-engage the part after the retraction has taken place.\n\nAny number\ngreater than zero."},
            {"command": "mom_kin_spindle_axis", "icon": "Variable", "docu": "Defines a vector that establishes the spindle axis of the\nmachine tool.&nbsp; For three axis posts it is always (0,0,1).\nMay be set to (1,0,0) or (-1,0,0) for mill turns.&nbsp;\nOtherwise it is set to (0,0,1).&nbsp; Is used for simulated\ncycles, rotary axis re-engage and mill turns.\n\nUnit vector."},
            {"command": "mom_kin_tool_change_time", "icon": "Variable", "docu": "Defines the time to be added to total machine time\nfor tool changes.\n\nAny number greater than or equal to zero."},
            {"command": "mom_kin_tool_tracking_height", "icon": "Variable", "docu": "For four or five axis milling machines only.&nbsp; Defines the\nheight on the tool where distance calculations will be made.&nbsp;\nThis is very useful when swarfing.&nbsp; The default value is\nzero, which represents the tool tip.\n\nAny number greater than or\nequal to zero."},
            {"command": "mom_kin_wire_tilt_output_type", "icon": "Variable", "docu": "Defines how the post will output four axis wire EDM.&nbsp;\nIf ANGLES, then mom_pos(3) and mom_pos(4) will represent the Q\nand R words for the Agie type machines.&nbsp; If COORDINATES,\nthen&nbsp; mom_pos(3) and mom_pos(4) will represent the U and V\nvalues for the Mitsubishi type machines or AGIE Vision type\nmachines. These values are incremental from mom_pos(1) and mom_pos(2) respectively.\n\nANGLES,\nCOORDINATES"},
            {"command": "mom_kin_x_axis_limit", "icon": "Variable", "docu": "Maximum travel for the X axis. Use the custom command\npb_cmd_check_travel_limits.tcl to generate warnings.\n\nAny number greater than or equal to\nzero."},
            {"command": "mom_kin_y_axis_limit", "icon": "Variable", "docu": "Maximum travel for the Y axis. Use the custom command\npb_cmd_check_travel_limits.tcl to generate warnings.\n\nAny number greater than or equal to\nzero."},
            {"command": "mom_kin_z_axis_limit", "icon": "Variable", "docu": "Maximum travel for the Z axis. Use the custom command\npb_cmd_check_travel_limits.tcl to generate warnings.\n\nAny number greater than or equal to\nzero."},
            {"command": "mom_auxfun", "icon": "Variable", "docu": "The value entered in AUXFUN UDE.\n\nAny number greater than or\nequal to zero."},
            {"command": "mom_auxfun_text", "icon": "Variable", "docu": "The appended text entered in the AUXFUN UDE.\n\nAny string 66\ncharacters or less."},
            {"command": "mom_auxfun_text_defined", "icon": "Variable", "docu": "Flag defining whether AUXFUN appended text has been entered.\n\n0 (no\ntext), 1 (text defined)"},
            {"command": "mom_axis_position", "icon": "Variable", "docu": "The axis value for set_axis UDE.\n\nZAXIS or WAXIS"},
            {"command": "mom_axis_position_value", "icon": "Variable", "docu": "The position for the SET/ZAXIS,n or SET/WAXIS,n in the set_axis\nUDE"},
            {"command": "mom_axis_position_value_defined", "icon": "Variable", "docu": "Flag defining if the set_axis position has been defined.\n\n0 (no\ntext), 1 (text defined)"},
            {"command": "mom_clamp_axis", "icon": "Variable", "docu": "The axis option selected from CLAMP UDE.  The AUTO\noption will initiate auto-clamping in Post Builder created four axis\nposts.\n\nXAXIS, YAXIS, ZAXIS, AAXIS, BAXIS, CAXIS, AUTO"},
            {"command": "mom_clamp_status", "icon": "Variable", "docu": "Clamping status of the selected axis.\n\nON, OFF, AXISON, AXISOFF"},
            {"command": "mom_clamp_text", "icon": "Variable", "docu": "The appended text entered in the CLAMP UDE.\n\nAny string 66\ncharacters or less."},
            {"command": "mom_clamp_text_defined", "icon": "Variable", "docu": "Flag defining whether CLAMP appended text has been entered.\n\n0 (no\ntext), 1 (text defined)"},
            {"command": "mom_coolant_mode", "icon": "Variable", "docu": "Defines the type of coolant desired.\n\nON, FLOOD, MIST, TAP, THRU"},
            {"command": "mom_coolant_text", "icon": "Variable", "docu": "The appended text entered in the COOLNT UDE.\n\nAny string 66\ncharacters or less."},
            {"command": "mom_coolant_text_defined", "icon": "Variable", "docu": "Flag defining whether COOLNT appended text has been entered.\n\n0 (no\ntext), 1 (text defined)"},
            {"command": "mom_coordinate_output_mode", "icon": "Variable", "docu": "For mill turn only. Defines the status of the UDE\nSET/POLAR.  ON means that the output will be in\npolar coordinates. OFF means the output will be in normal\nCartesian coordinates.\n\nON, OFF "},
            {"command": "mom_cut_wire_text", "icon": "Variable", "docu": "The appended text entered in the CUT/WIRE UDE.\n\nAny string 66\ncharacters or less."},
            {"command": "mom_cut_wire_text_defined", "icon": "Variable", "docu": "Flag defining whether CUT/WIRE appended text has been entered.\n\n0 (no\ntext), 1 (text defined)"},
            {"command": "mom_cutcom_adjust_register", "icon": "Variable", "docu": "The value of the cutcom adjust register in CUTCOM UDE.\n\nAny\nnumber greater than or equal to zero."},
            {"command": "mom_cutcom_adjust_register_defined", "icon": "Variable", "docu": "Flag defining if the cutcom adjust register has been specified\nin CUTCOM UDE.\n\n0 (no), 1 (yes)"},
            {"command": "mom_cutcom_angle", "icon": "Variable", "docu": "Angle specified for Engage/Retract cutcom method in the machine control\ndialog in the operation.\n\nNumeric Value"},
            {"command": "mom_cutcom_distance", "icon": "Variable", "docu": "Cutcom distance specified for Engage/Retract cutcom method in the machine\ncontrol dialog in the operation.\n\nAny number greater than or equal\nto zero."},
            {"command": "mom_cutcom_mode", "icon": "Variable", "docu": "Defines the cutcom direction in the CUTCOM UDE.\n\nLEFT, RIGHT, ON\n"},
            {"command": "mom_cutcom_plane", "icon": "Variable", "docu": "Defines the cutcom plane in the CUTCOM UDE.\n\nNONE, XYPLAN, YZPLAN,\nZXPLAN"},
            {"command": "mom_cutcom_plane_output_flag", "icon": "Variable", "docu": "Flag defining if the cutcom plane has been specified in\nCUTCOM UDE.\n\n0 (no text), 1 (text defined)"},
            {"command": "mom_cutcom_register", "icon": "Variable", "docu": "The cutcom register defined in the machine control dialog in\nthe operation.  May be overridden by the cutcom register\non the tool.\n\nAny number greater than or equal to zero."},
            {"command": "mom_cutcom_register_output_flag", "icon": "Variable", "docu": "Flag defining whether the cutcom register has been specified in\nthe machine control dialog in the operation.\n\n0 (no text), 1\n(text defined)"},
            {"command": "mom_cutcom_text", "icon": "Variable", "docu": "The appended text entered in CUTCOM UDE.\n\nAny string 66 characters\nor less."},
            {"command": "mom_cutcom_text_defined", "icon": "Variable", "docu": "Flag defining whether CUTCOM appended text has been entered.\n\n0 (no\ntext), 1 (text defined)"},
            {"command": "mom_cutcom_type", "icon": "Variable", "docu": "The type of cutter compensation requested in the machine control\ndialog.\n\n1 (Retract/Engage), 2 (Wall)"},
            {"command": "mom_def_sequence_frequency", "icon": "Variable", "docu": "The initial value of the frequency parameter for the SEQUENCE\ncommand in the definition file.\n\nAny number greater than zero."},
            {"command": "mom_def_sequence_increment", "icon": "Variable", "docu": "The initial value of the increment parameter for the SEQUENCE\ncommand in the definition file.\n\nAny number greater than zero."},
            {"command": "mom_def_sequence_maximum", "icon": "Variable", "docu": "The initial value of the maximum sequence number parameter for\nthe SEQUENCE command in the definition file.\n\nAny number greater than\nzero."},
            {"command": "mom_def_sequence_start", "icon": "Variable", "docu": "The initial value of the start sequence number for the\nSEQUENCE command in the definition file.\n\nAny number greater than zero."},
            {"command": "mom_delay_mode", "icon": "Variable", "docu": "Defines the mom variable that will be used for the\ndelay UDE.  Seconds will use mom_delay_value, revolutions will use\nthe mom_delay_revs \n\nSECONDS or REVOLUTIONS"},
            {"command": "mom_delay_revs", "icon": "Variable", "docu": "The delay value in revolutions for revolutions mode in the\nDELAY UDE.\n\nAny number greater than zero."},
            {"command": "mom_delay_text", "icon": "Variable", "docu": "The appended text entered in DELAY UDE.\n\nAny string 66 characters\nor less."},
            {"command": "mom_delay_text_defined", "icon": "Variable", "docu": "Flag defining whether DELAY appended text has been entered.\n\n0 (no\ntext), 1 (text defined)"},
            {"command": "mom_delay_value", "icon": "Variable", "docu": "The delay value in seconds for seconds mode in the\nDELAY UDE.\n\nAny number greater than zero."},
            {"command": "mom_flush_guides", "icon": "Variable", "docu": "For Wire EDM only, setting of the FLUSH guide parameter.\n\nNONE,\nUPPER, LOWER, ALL"},
            {"command": "mom_flush_pressure", "icon": "Variable", "docu": "For Wire EDM only, setting of the FLUSH pressure parameter.\n\nNONE,\nLOW, MEDIUM, HIGH, REGISTER"},
            {"command": "mom_flush_register", "icon": "Variable", "docu": "For Wire EDM only, setting of the FLUSH register parameter.\n\nAny\nnumber greater than or equal to zero."},
            {"command": "mom_flush_tank", "icon": "Variable", "docu": "For Wire EDM only, setting of the FLUSH/TANK parameter.\n\nIN, OUT"},
            {"command": "mom_flush_tank_text", "icon": "Variable", "docu": "The appended text entered in FLUSH/TANK UDE.\n\nAny string 66 characters\nor less."},
            {"command": "mom_flush_tank_text_defined", "icon": "Variable", "docu": "Flag defining whether FLUSH/TANK appended text has been entered.\n\n0 (no\ntext), 1 (text defined)"},
            {"command": "mom_head_name", "icon": "Variable", "docu": "This value is used to switch between posts for linked\nposts.\n\nAny string 66 characters or less."},
            {"command": "mom_head_name_defined", "icon": "Variable", "docu": "Flag defining whether HEAD has been programmed.\n\n0 (no ), 1\n(yes)"},
            {"command": "mom_head_text", "icon": "Variable", "docu": "The appended text entered in SELECT/HEAD UDE.\n\nAny string 66 characters\nor less."},
            {"command": "mom_head_text_defined", "icon": "Variable", "docu": "Flag defining whether SELECT/HEAD appended text has been entered.\n\n0 (no\ntext), 1 (text defined)"},
            {"command": "mom_head_type", "icon": "Variable", "docu": "Value of the head for the SELECT/HEAD UDE.\n\nFRONT,REAR,RIGHT,LEFT,SIDE,SADDLE"},
            {"command": "mom_load_tool_number_defined", "icon": "Variable", "docu": "Flag defining if the tool number has been specified in\nthe LOAD or TURRET UDE.\n\n0 (no text), 1 (text defined)"},
            {"command": "mom_lock_axis", "icon": "Variable", "docu": "The axis to be locked for the SET/LOCK UDE. \nThe post will convert the FOURTH and FIFTH parameters into\nthe applicable rotary axis (A,B or C). For five axis\nmachine tools with the fifth axis rotation method set to\nreverse, set mom_kin_rotary_axis_method to zero. To do this, uncomment the\nfollowing line in the post builder custom PB_CMD_revise_new_iks file: set\nmom_kin_rotary_axis_method \"ZERO\"\n\nXAXIS, YAXIS, ZAXIS, AAXIS, BAXIS, CAXIS, FOURTH, FIFTH"},
            {"command": "mom_lock_axis_plane", "icon": "Variable", "docu": "The plane to be locked for the SET/LOCK UDE. \nYou must enter a valid plane for five axis machines.\nYou do not need to enter an axis for four\naxis machines.\n\nXYPLAN, YZPLAN, ZXPLAN, NONE."},
            {"command": "mom_lock_axis_value", "icon": "Variable", "docu": "The position or angle to lock the axis or plane"},
            {"command": "mom_lock_axis_value_defined", "icon": "Variable", "docu": "Flag defining wheter the lock axis value has been entered.\n\n0\n(no ), 1 (yes)"},
            {"command": "mom_modes_text", "icon": "Variable", "docu": "The appended text entered in the SET/MODE UDE.\n\nAny string 66\ncharacters or less."},
            {"command": "mom_modes_text_defined", "icon": "Variable", "docu": "Flag defining whether SET/MODE appended text has been entered.\n\n0 (no\ntext), 1 (text defined)"},
            {"command": "mom_number_of_ranges", "icon": "Variable", "docu": "You can use this variable to define the maximum number\nof ranges for the custom commands PB_CMD_spindle_sfm_range_select  or PB_CMD_spindle_rpm_range_select.\n\n0-9"},
            {"command": "mom_operator_message", "icon": "Variable", "docu": "The text of the operator message.  The post will\nadd a control out string to the beginning and a\ncontrol out string to the end.  You can specify\nthese in Post Builder. \n\nAny string 66 characters or less."},
            {"command": "mom_operator_message_defined", "icon": "Variable", "docu": "Flag defining whether the operator message text has been entered.\n\n0\n(no ), 1 (yes)"},
            {"command": "mom_opskip_text", "icon": "Variable", "docu": "The appended text entered in the OPSKIP UDE.\n\nAny string 66\ncharacters or less."},
            {"command": "mom_opskip_text_defined", "icon": "Variable", "docu": "Flag defining whether OPSKIP appended text has been entered.\n\n0 (no\ntext), 1 (text defined)"},
            {"command": "mom_opstop_text", "icon": "Variable", "docu": "The appended text entered in the OPSTOP UDE.\n\nAny string 66\ncharacters or less."},
            {"command": "mom_opstop_text_defined", "icon": "Variable", "docu": "Flag defining whether OPSTOP appended text has been entered.\n\n0 (no\ntext), 1 (text defined)"},
            {"command": "mom_origin", "icon": "Variable", "docu": "For four and five axis posts, defines the distance from\nthe origin of the MCS to the center of the\nrotary table. For other posts, an offset from the MCS\norigin to the machine tool coordinate center.\n\nNumeric Array(3)"},
            {"command": "mom_origin_text", "icon": "Variable", "docu": "The appended text entered in the ORIGIN UDE.\n\nAny string 66\ncharacters or less."},
            {"command": "mom_origin_text_defined", "icon": "Variable", "docu": "Flag defining whether ORIGIN appended text has been entered.\n\n0 (no\ntext), 1 (text defined)"},
            {"command": "mom_overide_oper_param", "icon": "Variable", "docu": "From the Cutter Compensation UDE and Tool Length Compensation UDE.\n\n0\n= no, 1 = yes"},
            {"command": "mom_parallel_to_axis", "icon": "Variable", "docu": "The value of the SET/MODE UDE to control how parallel\naxes will be output in the post.\n\nZAXIS, WAXIS or VAXIS."},
            {"command": "mom_power_text", "icon": "Variable", "docu": "The appended text entered in the POWER UDE.\n\nAny string 66\ncharacters or less."},
            {"command": "mom_power_text_defined", "icon": "Variable", "docu": "Flag defining whether POWER appended text has been entered.\n\n0 (no\ntext), 1 (text defined)"},
            {"command": "mom_power_value", "icon": "Variable", "docu": "For Wire EDM only, the power setting for wire EDM\noperations.\n\nAny number greater than or equal to zero."},
            {"command": "mom_pprint", "icon": "Variable", "docu": "The text of the PPRINT UDE. The post will replace\nthe first \"(\" with a control out string to the\nbeginning and the next \")\" with a control out string.\n You can specify the control out and control in\nstrings in Post Builder. \n\nAny string 66 characters or less."},
            {"command": "mom_pprint_defined", "icon": "Variable", "docu": "Flag defining whether the PPRINT UDE text has been entered.\n\n0\n(no ), 1 (yes)"},
            {"command": "mom_prefun", "icon": "Variable", "docu": "The value of the PREFUN UDE.\n\nAny number greater than or\nequal to zero."},
            {"command": "mom_prefun_text", "icon": "Variable", "docu": "The appended text entered in the PREFUN UDE.\n\nAny string 66\ncharacters or less."},
            {"command": "mom_prefun_text_defined", "icon": "Variable", "docu": "Flag defining whether PREFUN appended text has been entered.\n\n0 (no\ntext), 1 (text defined)"},
            {"command": "mom_rotate_axis_type", "icon": "Variable", "docu": "Defines the axis to be rotated for ROTATE UDE.\n\nTABLE, HEAD,\nAAXIS, BAXIS, CAXIS"},
            {"command": "mom_rotation_angle", "icon": "Variable", "docu": "Defines the angle to rotate to for the ROTATE UDE.\n The value may be incremental, absolute or to a\nmodulo 360 angle.\n\nNumeric Value"},
            {"command": "mom_rotation_angle_defined", "icon": "Variable", "docu": "Flag defining if the ROTATE angle has been entered.\n\n0 (no\n), 1 (yes)"},
            {"command": "mom_rotation_direction", "icon": "Variable", "docu": "Defines the direction to rotate the table for the ROTATE\nUDE.\n\nCLW, CCLW, NONE"},
            {"command": "mom_rotation_mode", "icon": "Variable", "docu": "Defines how the mom_rotation_angle will be applied.\n\nNONE, ABSOLUTE, INCREMENTAL, ATANGLE."},
            {"command": "mom_rotation_reference_mode", "icon": "Variable", "docu": "Defines the status of ROTREF. Currently not used.\n\nON, OFF"},
            {"command": "mom_rotation_text", "icon": "Variable", "docu": "The appended text entered in the ROTATE UDE.\n\nAny string 66\ncharacters or less."},
            {"command": "mom_rotation_text_defined", "icon": "Variable", "docu": "Flag defining whether ROTATE appended text has been entered.\n\n0 (no\ntext), 1 (text defined)"},
            {"command": "mom_seqnum", "icon": "Variable", "docu": "The current sequence number.\n\nAny number greater than zero."},
            {"command": "mom_sequence_frequency", "icon": "Variable", "docu": "The value of the frequency parameter for the SEQNO UDE.\n\nAny\nnumber greater than zero."},
            {"command": "mom_sequence_increment", "icon": "Variable", "docu": "The value of the increment parameter for the SEQNO UDE.\n\nAny\nnumber greater than zero."},
            {"command": "mom_sequence_mode", "icon": "Variable", "docu": "Defines how the sequence number will be output. ON will\nreinstate the output of the sequence number.  OFF will\nsuppress sequence numbers.  N will turn on sequence numbers\nstarting with N. AUTO is currently not used.\n\nON, OFF, N,\nAUTO."},
            {"command": "mom_sequence_number", "icon": "Variable", "docu": "The value for the next sequence number for the SEQNO\nUDE.\n\nAny number greater than zero."},
            {"command": "mom_sequence_text", "icon": "Variable", "docu": "The appended text entered in the SEQNO UDE.\n\nAny string 66\ncharacters or less."},
            {"command": "mom_sequence_text_defined", "icon": "Variable", "docu": "Flag defining whether SEQNO appended text has been entered.\n\n0 (no\ntext), 1 (text defined)"},
            {"command": "mom_spindle_direction", "icon": "Variable", "docu": "Defines the direction of the spindle.  With the preference\nupdate post from tool turned on, this value comes from\nthe tool.  Otherwise the direction comes from the SPINDL\nUDE.\n\nCLW, CCLW or NONE"},
            {"command": "mom_spindle_maximum_rpm", "icon": "Variable", "docu": "Defines the maximum spindle rpm allowed in an operation. \nThis value can only be output with the SPINDL UDE.\nIt is not available on the feeds and speeds dialog.\n\nAny\nnumber greater than zero."},
            {"command": "mom_spindle_maximum_rpm_defined", "icon": "Variable", "docu": "Flag defining whether the SPINDL MAXRPM parameter has been entered.\n\n0\n(no ), 1 (yes)"},
            {"command": "mom_spindle_mode", "icon": "Variable", "docu": "Defines the output mode of the spindle.  With the\npreference update post from tool turned on, this value comes\nfrom the tool.  Otherwise the direction comes from the\nSPINDL UDE. \n\nRPM or SFM"},
            {"command": "mom_spindle_range", "icon": "Variable", "docu": "Defines a spindle range. This value can be output with\nthe SPINDL UDE.  You can use a custom command\nin Post Builder to automatically derive the spindle range from\nthe rpm.\n\n1 through 9"},
            {"command": "mom_spindle_range_defined", "icon": "Variable", "docu": "Flag defining whether the SPINDL RANGE parameter has been entered.\n\n0\n(no ), 1 (yes)"},
            {"command": "mom_spindle_rpm", "icon": "Variable", "docu": "Defines the rpm of the spindle when in RPM mode.\n In SFM mode, represents the equivalent rpm at the\nfirst cut radius.\n\nAny number greater than or equal to zero."},
            {"command": "mom_spindle_speed", "icon": "Variable", "docu": "The value of either SFM or RPM. \n\nAny number greater\nthan or equal to zero."},
            {"command": "mom_spindle_speed_defined", "icon": "Variable", "docu": "Flag defining whether the SPINDL speed parameter has been entered.\n\n0\n(no ), 1 (yes)"},
            {"command": "mom_spindle_text", "icon": "Variable", "docu": "The appended text entered in the SPINDL UDE.\n\nAny string 66\ncharacters or less."},
            {"command": "mom_spindle_text_defined", "icon": "Variable", "docu": "Flag defining whether SPINDL appended text has been entered.\n\n0 (no\ntext), 1 (text defined)"},
            {"command": "mom_stop_text", "icon": "Variable", "docu": "The appended text entered in the STOP UDE.\n\nAny string 66\ncharacters or less."},
            {"command": "mom_stop_text_defined", "icon": "Variable", "docu": "Flag defining whether STOP appended text has been entered.\n\n0 (no\ntext), 1 (text defined)"},
            {"command": "mom_tool_adj_reg_defined", "icon": "Variable", "docu": "Flag defining if the adjust register parameter has been entered\nin the tool dialog.\n\n0 (no ), 1 (yes)"},
            {"command": "mom_tool_adjust_register", "icon": "Variable", "docu": "Value of the tool length adjust register.  Used only\nif update post from tool preference is set to on.\n\nAny\nnumber greater than or equal to zero."},
            {"command": "mom_tool_change_type", "icon": "Variable", "docu": "Defines the type of tool change.  If type is\nAUTO, then the auto tool change event marker will be\nexecuted.  If type is MANUAL, then the manual tool\nchange event marker will be executed.\n\nAUTO or MANUAL. "},
            {"command": "mom_tool_head", "icon": "Variable", "docu": "Defines the name of the current head used by a\ntwo turret lathe.\n\nFRONT,REAR,RIGHT,LEFT,SIDE,SADDLE"},
            {"command": "mom_tool_number", "icon": "Variable", "docu": "Defines the tool to be loaded. With the preference update\npost from tool turned on, this value comes from the\ntool. Otherwise the direction comes from the LOAD or TURRET\nUDE.\n\nAny number greater than or equal to zero."},
            {"command": "mom_tool_name", "icon": "Variable", "docu": "Defines the tool to be loaded. With the preference update\npost from tool turned on, this value comes from the\ntool. Otherwise the direction comes from the LOAD or TURRET\nUDE.\n\nAny number greater than or equal to zero."},
            {"command": "mom_next_tool_number", "icon": "Variable", "docu": "Defines the tool to be loaded. With the preference update\npost from tool turned on, this value comes from the\ntool. Otherwise the direction comes from the LOAD or TURRET\nUDE.\n\nAny number greater than or equal to zero."},
            {"command": "mom_tool_use", "icon": "Variable", "docu": "Defines an array that contains the tool number and machine\ntime for each tool, where tool_use(0,0) represent the tool number\nand tool_use(0,1) represents the machining time for the first tool.\n\nAny\nnumber greater than or equal to zero."},
            {"command": "mom_translate", "icon": "Variable", "docu": "The values from the TRANS UDE command"},
            {"command": "mom_work_coordinate_number", "icon": "Variable", "docu": "Value output by the ZERO/N UDE.  This value can\nbe added to 53 to generate the Fanuc coordinate system\ncodes.\n\n0-6"},
            {"command": "mom_operation_name", "icon": "Variable", "docu": "returns the current operations name"},
            {"command": "mom_machine_mode", "icon": "Variable", "docu": ""},
            {"command": "mom_post_in_simulation", "icon": "Variable", "docu": ""},
            {"command": "mom_oper_program", "icon": "Variable", "docu": "Returns the Name of the next Group the current Operation is in."},
            {"command": "mom_pos", "icon": "Variable", "docu": ""},
            {"command": "mom_out_angle_pos", "icon": "Variable", "docu": "An array which contains the calculated real axis angle of the machine of the current operation."},
            {"command": "mom_prev_out_angle_pos", "icon": "Variable", "docu": "An array which contains the calculated real axis angle of the machine of the previus operation."},
            {"command": "mom_arc_angle", "icon": "Variable", "docu": ""},
            {"command": "mom_helix_pitch", "icon": "Variable", "docu": ""},
            {"command": "mom_namespace_name", "icon": "Variable", "docu": ""},
            {"command": "mom_output_pos_type", "icon": "Variable", "docu": ""},
            {"command": "mom_mcsname_attach_opr", "icon": "Variable", "docu": ""},
            {"command": "mom_isv_tool_type", "icon": "Variable", "docu": ""},
            {"command": "mom_cycle_retract_to", "icon": "Variable", "docu": ""},
            {"command": "mom_cycle_rapid_to", "icon": "Variable", "docu": ""},
            {"command": "mom_cycle_feed_to", "icon": "Variable", "docu": ""},
            {"command": "mom_cycle_spindle_axis", "icon": "Variable", "docu": ""},
            {"command": "mom_cycle_delay", "icon": "Variable", "docu": ""},
            {"command": "mom_cycle_feed_rate_mode", "icon": "Variable", "docu": ""},
            {"command": "mom_cycle_clearance_plane", "icon": "Variable", "docu": ""},
            {"command": "mom_cycle_feature_diameter", "icon": "Variable", "docu": ""},
            {"command": "mom_cycle_feed_rate", "icon": "Variable", "docu": ""},
            {"command": "mom_feed_engage_value", "icon": "Variable", "docu": ""},
            {"command": "mom_feed_engage_nominal_unit", "icon": "Variable", "docu": ""},
            {"command": "mom_pocket4_maximum_infeed_width", "icon": "Variable", "docu": ""},
            {"command": "mom_pocket4_helical_path_radius", "icon": "Variable", "docu": ""},
            {"command": "mom_invisible_mcs_array_size", "icon": "Variable", "docu": ""},
            {"command": "mom_axial_stepover_distance_source", "icon": "Variable", "docu": ""},
            {"command": "mom_cycle_feature_start_diameter", "icon": "Variable", "docu": ""},
            {"command": "mom_cut_direction_type", "icon": "Variable", "docu": ""},
            {"command": "mom_region_cut_method", "icon": "Variable", "docu": ""},
            {"command": "mom_vertical_pitch_value", "icon": "Variable", "docu": ""},
            {"command": "mom_axial_stepover_distance", "icon": "Variable", "docu": ""},
            {"command": "mom_feed_engage_unit", "icon": "Variable", "docu": ""},
            {"command": "mom_cycle_rapid_to_pos", "icon": "Variable", "docu": ""},
            {"command": "mom_template_subtype", "icon": "Variable", "docu": ""},
            {"command": "mom_template_type", "icon": "Variable", "docu": ""},
            {"command": "mom_next_oper_has_tool_change", "icon": "Variable", "docu": ""},
            {"command": "mom_operation_info", "icon": "Variable", "docu": ""},
            {"command": "mom_mcs_info", "icon": "Variable", "docu": ""},
            {"command": "mom_tool_info", "icon": "Variable", "docu": ""},
            {"command": "mom_cutter_description", "icon": "Variable", "docu": "Returns the tool description"},
            {"command": "mom_holder_description", "icon": "Variable", "docu": "Returns the tool description"},
            {"command": "mom_operation_name_list", "icon": "Variable", "docu": ""},
            {"command": "mom_output_mcs_name", "icon": "Variable", "docu": ""},
            {"command": "mom_sim_result", "icon": "Variable", "docu": ""},
            {"command": "mom_sim_result1", "icon": "Variable", "docu": ""},
            {"command": "mom_operation_type", "icon": "Variable", "docu": ""},
            {"command": "mom_output_unit", "icon": "Variable", "docu": "Returns the unit of the Output (metric/inch)"},
            {"command": "mom_motion_type", "icon": "Variable", "docu": ""},
            {"command": "mom_motion_event", "icon": "Variable", "docu": ""},
            {"command": "mom_cycle_definition_mode", "icon": "Variable", "docu": ""},
            {"command": "mom_cycle_type", "icon": "Variable", "docu": ""},
            {"command": "mom_tool_axis", "icon": "Variable", "docu": ""},
            {"command": "mom_tool_path_type", "icon": "Variable", "docu": ""},
            {"command": "mom_logname", "icon": "Variable", "docu": ""},
            {"command": "mom_vertical_pitch_value_source", "icon": "Variable", "docu": ""},
            {"command": "mom_cycle_thread_pitch", "icon": "Variable", "docu": ""},
            {"command": "mom_part_name", "icon": "Variable", "docu": ""},
            {"command": "mom_isv_tool_count", "icon": "Variable", "docu": ""},
            {"command": "mom_isv_tool_name", "icon": "Variable", "docu": ""},
            {"command": "mom_isv_tool_number", "icon": "Variable", "docu": ""},
            {"command": "mom_isv_tool_diameter", "icon": "Variable", "docu": ""},
            {"command": "mom_isv_tool_description", "icon": "Variable", "docu": ""},
            {"command": "mom_isv_tool_flute_length", "icon": "Variable", "docu": ""},
            {"command": "mom_isv_tool_x_correction", "icon": "Variable", "docu": ""},
            {"command": "mom_isv_tool_diameter", "icon": "Variable", "docu": ""},
            {"command": "mom_feed_cut_unit", "icon": "Variable", "docu": ""},
            {"command": "mom_feed_rapid_unit", "icon": "Variable", "docu": ""},
            {"command": "is_last_oper_in_programm", "icon": "Variable", "docu": ""},
            {"command": "lib_coord_ref_X", "icon": "Variable", "docu": ""},
            {"command": "lib_coord_ref_Y", "icon": "Variable", "docu": ""},
            {"command": "lib_coord_ref_Z", "icon": "Variable", "docu": ""},
            {"command": "lib_coord_ang_1", "icon": "Variable", "docu": ""},
            {"command": "lib_coord_ang_2", "icon": "Variable", "docu": ""},
            {"command": "lib_coord_ang_3", "icon": "Variable", "docu": ""},
            {"command": "lib_parameter", "icon": "Variable", "docu": ""},
            {"command": "lib_spf", "icon": "Variable", "docu": ""},
            {"command": "lib_main_zero_register", "icon": "Variable", "docu": ""},
            {"command": "lib_sav_kin_machine_type", "icon": "Variable", "docu": ""},
            {"command": "RAD2DEG", "icon": "Variable", "docu": ""},
            {"command": "DEG2RAD", "icon": "Variable", "docu": ""},
            {"command": "env", "icon": "Variable", "docu": ""},
            {"command": "lib_ge_pretreatment_runtime", "icon": "Variable", "docu": ""}

        ],
        "MOM": [
            {"command": "MOM_abort", "icon": "Event", "docu": "This function causes MOM to terminate with an error \nmessage. For example: MOM_abort \"Error occurred. Postprocessing has been aborted.\"\n\nMOM_abort\n(message)"},
            {"command": "MOM_abort_event", "icon": "Event", "docu": "This command immediately aborts the current event and returns processing\ncontrol back to NX.  Use this command if you\ndo not want to return to a calling procedure.\n\nMOM_abort_event (message)"},
            {"command": "MOM_add_to_address_buffer", "icon": "Event", "docu": "Depending on the start/end attribute specified, this extension will add\n\"value(s)\" to either the address start buffer or the address\nend buffer. Each time that this extension is called, it\nadds to the specified buffer.  When the contents of\nthe address are sent to the output buffer, the contents\nof the address start buffer will precede it and the\ncontents of the end buffer will go after it. \nThe address start buffer and the address end buffer are\ncleared once the they have been sent to the output\nbuffer.\n\nMOM_add_to_address_buffer (address name) (start|end) (value)"},
            {"command": "MOM_add_to_block_buffer", "icon": "Event", "docu": "Depending on the start/end attribute specified, this extension will add\n\"value(s)\" to either the block start buffer or the block\nend buffer. Each time that this extension is called, it\nadds to the specified buffer.  When the block is\nsent to the output buffer, the contents of the block\nstart buffer will precede it on the line and the\ncontents of the block end buffer will go after it.\n The block start buffer and the block end buffer\nare cleared once the they have been written to the\noutput buffer.\n\nMOM_add_to_block_buffer (block name) (start|end) (value)"},
            {"command": "MOM_add_to_line_buffer", "icon": "Event", "docu": "Depending on the start/end attribute specified, this extension will add\n\"value(s)\" to either the line's start buffer or the line's\nend buffer. Each time that this extension is called, it\nadds to the specified buffer.  When the contents of\nthe output buffer are sent to the output file, the\ncontents of the line's start buffer will precede it on\nthe line and the contents of the end buffer will\ngo on the same line after it. The line start\nbuffer, line end buffer, and output buffer are all cleared\nonce the they have been written to the output file.\n\nMOM_add_to_line_buffer\n(start|end)\n(value)"},
            {"command": "MOM_ask_address_value", "icon": "Event", "docu": "Always returns the absolute address value NOT the incremental value.\n\nMOM_ask_address_value\n(address name)"},
            {"command": "MOM_ask_env_var", "icon": "Event", "docu": "This extension allows you to determine how environment variable \"variable\nname\" is set.\n\nMOM_ask_env_var (variable name)"},
            {"command": "MOM_ask_event_type", "icon": "Event", "docu": "Returns the name of the current event. This is the\nlast event that the event generator executed"},
            {"command": "MOM_ask_ess_exp_value", "icon": "Event", "docu": "Provides access to the variables of the NX Expression module,\ni.e., it returns the value of the NX Expression variable.\n\nMOM_ask_ess_exp_value\n(variable_name)"},
            {"command": "MOM_ask_init_junction_xform", "icon": "Event", "docu": "This command returns the transformation matrix of the given Junction\n(name) at its initial state w.r.t the absolute coordinate system\n(ACS).\n\nmom_sim_result (matrix: list of 9) & mom_sim_result1 (origin: list of\n3)"},
            {"command": "MOM_ask_machine_zero_junction_name", "icon": "Event", "docu": "This command returns the name of the MACHINE_ZERO Junction.\n\nmom_sim_result"},
            {"command": "MOM_ask_oper_csys", "icon": "Event", "docu": "Fetches the CSYS information of the named operation. Passes the\nresults in three mom variables. mom_result represents the mom_special_output of\nthe CSYS. 0 = None, 1 = Use Main MCS,\n2 = Fixture Offset, 3 = CSYS Rotation. mom_result1 is\na list of 12 doubles containing the mom_csys_matix of the\noperation CSYS. mom_result2 is a list of 12 doubles containing\nthe mom_machine_csys_matrix of the operation.\n\nMOM_ask_oper_csys (operation-name)"},
            {"command": "MOM_ask_syslog_name", "icon": "Event", "docu": "This command returns the name of syslog file of current\nsession.\n\nString"},
            {"command": "MOM_ask_mcs_info", "icon": "Event", "docu": ""},
            {"command": "MOM_close_output_file", "icon": "Event", "docu": "This extension allows you to suspend writing output to a\nparticular file until it is opened again\n\nMOM_close_output_file (filename)"},
            {"command": "MOM_check_out_license", "icon": "Event", "docu": "Obtains Flexlm license until the end of the posting job.\n(license) is the string name of a valid license. Returns\n1 (true) for success or 0 (false) for failure.\n\nMOM_check_out_license (license)"},
            {"command": "MOM_convert_point", "icon": "Event", "docu": "Converts a point from a tool path position to an\nMCS position in machine tool coordinates. (point) and (vector) are\nTcl arrays of 3. Returns pimary and alternate solutions as\nTcl lists of X, Y, Z, 4th, 5th in the\nvariables mom_post_result for the primary and mom_post_result1 for the alternate.\n\n\nMOM_convert_point (point) (vector)"},
            {"command": "MOM_disable_address", "icon": "Event", "docu": "Suppresses all output for an address.  MOM_force ONCE or\nMOM_force ALWAYS are ignored while MOM_disable_address is active. MOM_enable_address cancels\nMOM_disable_address.\n\nMOM_disable_address (Address)"},
            {"command": "MOM_display_message", "icon": "Event", "snippet": "MOM_display_message \"${1:Message}\" \"${2:title}\" ${3|I,E,W,Q|} ${4| ,\"button1\"|}", "docu": "Displays a message dialog box in NX. (type) is the\nstyle of the message box, I|E|W|Q, where I is info,\nE is error, W is warning, and Q is question.\nButton labels are optional. Returns the number of the button\n(1, 2, or 3) that the user clicks.\n\nMOM_display_message (message) (title)\n(type) [(button1)][(button2)][(button3)]"},
            {"command": "MOM_do_template", "icon": "Event", "docu": "Generate output based upon the Block Template \"template_name\".  BUFFER\nhas the usual meaning. BUFFER will generate the output value\nfor Block Template \"template_name\" but does not add it to\nthe output buffer, and hence, does not output it to\nthe output file.  CREATE will generate the value for\nBlock Template \"template_name\" but does not output to the output\nbuffer.  This function returns the string created as the\nresult of the template name.\n\nMOM_do_template (template_name) {BUFFER | CREATE}"},
            {"command": "MOM_enable_address", "icon": "Event", "docu": "Restores output status for an address that MOM_disable_address suppressed. \nReturns output status to the initial state.\n\nMOM_enable_address (Address)"},
            {"command": "MOM_force", "icon": "Event", "snippet": "MOM_force ${1|once,always,off|} ", "docu": "The next time that a block template that contains a\nreference to any of the input address names is evaluated,\nthe word that contains that address will be output regardless\nof its modality attribute.\n\nMOM_force (Always | Once | Off )\n(Address_1 ... Address_n)"},
            {"command": "MOM_force_block", "icon": "Event", "snippet": "MOM_force_block ${1|once,always,off|} ", "docu": "Example: MOM_force_block Once linear\n\nMOM_force_block (Always | Once | Off )\n(Block_1 ... Block_n)"},
            {"command": "MOM_incremental", "icon": "Event", "docu": "The next time that a block template that contains a\nreference to any of the input address names is evaluated,\nthe deference (increment) from the previous value is output. \nIf ON, then for each Address_i, always output increment. \nIf OFF, then for each Address_i, always output absolute.\n\nMOM_incremental (ON\n| OFF) (Address_1 ... Address_n)"},
            {"command": "MOM_load_definition_file", "icon": "Event", "docu": "This will load the definition file given by filename. If\ndata in filename (or any of its included files) matches\ndata already loaded by previous definition files, the duplicate data\nis overridden by the new version. Like any TCL extension,\nthis command may be called from any place in the\nTCL script.\n\nMOM_load_definition_file (filename)"},
            {"command": "MOM_load_lathe_thread_cycle_params", "icon": "Event", "docu": "This command will load the parameters of a lathe threading\ncycle of the current operation.  It returns 1 when\nloading is successful otherwise 0. This command should be called\nafter the desired CSYS is set.\n\n0 or 1"},
            {"command": "MOM_log_message", "icon": "Event", "docu": "This function causes MOM to write a message to the\nsyslog.\n\nMOM_log_message (message)"},
            {"command": "MOM_on_event_error", "icon": "Event", "docu": "If the TCL interpreter reports an error this procedure is\ninvoked prior to raising a system error. The {_debug} procedure\nis invoked only if DEBUG mode is true.  Example:\nThis procedure is invoked by NX.\n\nMOM_on_event_error {_debug}"},
            {"command": "MOM_on_parse_error", "icon": "Event", "docu": "If a syntax error is found in the Definition File\nthese procedures are invoked prior to raising a system error.\nThe {_debug} procedure is invoked only if DEBUG mode is\ntrue.\n\nMOM_on_parse_error {_debug}"},
            {"command": "MOM_open_output_file", "icon": "Event", "docu": "This extension allows you to redirect output to other output\nfiles.  If a file \"filename\" does not exist, a\nnew one will be created with that file name.\n\nMOM_open_output_file (filename)"},
            {"command": "MOM_output_literal", "icon": "Event", "docu": "Output a list of literals and variables as a single\nline. If BUFFER is present then only place the string\nin the output buffer. Do not send it to the\noutput yet.\n\nMOM_output_literal \"string\" {BUFFER}"},
            {"command": "MOM_output_text", "icon": "Event", "docu": "This extension will output a list of literals and variables\nas a single line, just like MOM_output_literal except that no\nsequence number will be output. If BUFFER is present then\nonly place the string in the output buffer. Do not\nsend it to the output yet.\n\nMOM_output_text (literal) {BUFFER}"},
            {"command": "MOM_output_to_listing_device", "icon": "Event", "docu": "If running in an interactive NX session then output string\nto the NX listing window, otherwise do nothing.\n\nMOM_output_to_listing_device (\"string\")"},
            {"command": "MOM_post_oper_path", "icon": "Event", "docu": "Postprocesses the named operation. The output file argument can be\nspecified without a post; the default post is used. When\nthe file name is given without a preceding path, the\nprimary output directory will be used. When a post is\nspecified, the output file argument SAME outputs to the active\noutput file. Returns 1 (True) when the execution is successful,\n0 (False) if it is not successful, and -1 if\nthe post is calling itself. During execution mom_post_oper_path exists and\nhas value 1. The called process uses the same units\nspecifed in the Postprocess dialog box. If a post is\nnamed,\nthe\nreview\nfile\noption\nand\nwarning\noutput\nsetting\nare\ngoverned by the post that is named.\n\nMOM_post_oper_path (operation-name) [(output file)]\n[(postprocessor)] [ (event-handler Tcl file) (definition file)]"},
            {"command": "MOM_reload_kinematics", "icon": "Event", "docu": "Refresh the event generator with the current values of all\nthe kinematics variables.\n\nInteger"},
            {"command": "MOM_reload_variable", "icon": "Event", "docu": "Update the event generator with the current value of variable_name\nin the event handler.\n\nMOM_reload_variable [-a] variable_name"},
            {"command": "MOM_reset_sequence", "icon": "Event", "docu": "A sequence is a block template that is output at\nthe beginning of each line. It will typically be used\nto output sequence numbers but it may also be used\nto output any block template.\n\nMOM_reset_sequence (start) (increment) {frequency}"},
            {"command": "MOM_run_postprocess", "icon": "Event", "docu": "Runs a separate post process from within a postprocessor on\nthe same operations or programs that are being postprocessed. Returns\n1 (true) when the process execution is successful, 2 (false)\nif there is an execution error, -1 if the post\nis calling itself. You can call the same post that\nis executing, but typically you would use a separate post,\nsuch as a turbo post.\n\nMOM_run_postprocess (event-handler Tcl file) (definition file)\n(output file) current post is calling itself"},
            {"command": "MOM_run_user_function", "icon": "Event", "docu": "This function causes MOM to call the function named entry_point_name\nin the shared library named shared_library_name. That function can then\nextend the translator from which MOM_run_user_function was called. It will\ndo this by calling a User Function function named UF_MOM_extend_translator(\nparam, \"extension_name\", extension_entry_point ). The param will be passed into\nentry_point_name as the first argument. The signature of entry_point_name is\nthe same as ufusr. The extension_name is the name of\nthe function as it will appear in a TCL script.\nThe extension_entry_point is the actual address of the function to\nbe called by the interpreter when interpreting the extension_name call.\n\nMOM_run_user_function\n(shared_library_name)\n(entry_point_name)"},
            {"command": "MOM_set_address_format", "icon": "Event", "docu": "This function redefines the format to be used for the\n(Address Name) as (Format Name) for outputting in a block.\nThe (Format Name) must be defined in the Definition File.\n\nMOM_set_address_format\n(Address Name) (Format Name)"},
            {"command": "MOM_set_debug_mode", "icon": "Event", "docu": "This will activate, deactivate, and resume the debugger. Like any\nTCL extension, this command may be called from any place\nin the TCL script.  If ON, the debugger will\nactivate by initializing with data entered in the debugger dialog\nor stdout.  If OFF, the debugger will be deactivated.\n\nMOM_set_debug_mode\n(ON | OFF)"},
            {"command": "MOM_set_env_var", "icon": "Event", "docu": "Defines NX environment variables. Both arguments are case sensitive. Only\nnew variables can be set. If you attempt to override\npre-existing variables, the command will fail. Variables are unset when\npost process ends. Returns 1 for success, new variable is\ncreated and set. Returns 0 for failure, variable cannot be\ncreated - it probably already existed.\n\nMOM_set_env_var (variable name as string)(variable\nvalue as string)"},
            {"command": "MOM_set_line_leader", "icon": "Event", "docu": "This function causes MOM to set the line leader to\na string with the indicated status. A line leader is\noutput as the leading character(s) of the output line (i.e.,\nbefore the SEQUENCE).\n\nMOM_set_line_leader (Always | Once | Off ) (\"string\")"},
            {"command": "MOM_set_seq_off", "icon": "Event", "docu": "Does not output a sequence number. Returns the sequence setting\nat the time the command is executed.\n\nset current_status [MOM_set_seq_off] ...\nif { $current_status == \"on\" } { MOM_set_seq_on }"},
            {"command": "MOM_set_seq_on", "icon": "Event", "docu": "Allows output of the sequence number if a SEQUENCE specifier\nwas given in the definition file.  Return the sequence\nsetting at the time the command is executed.\n\nset current_status [MOM_set_seq_on]\n ... if { $current_status == \"off\" } { MOM_set_seq_off\n}"},
            {"command": "MOM_skip_handler_to_event", "icon": "Event", "docu": "This command will skip the execution of the event handler\nuntil the given event is encountered. The condition is reset\nat the start-of-path and when the event is met. Motion\ntypes include Engage, Approach, Firstcut, Retract, Return, Rapid, Cut, Stepover,\nDeparture, Traversal, Sidecut, From, Gohome, and Cycle.\n\nMOM_skip_handler_to_event (event or motion-type)"},
            {"command": "MOM_suppress", "icon": "Event","snippet": "MOM_suppress ${1|once,always,off|} ", "docu": "The next time that a block template that contains a\nreference to any of the input address names is evaluated,\nthe word that contains the address will not be output\nregardless of its modality attribute.\n\nMOM_suppress (Always | Once | Off\n) (Address_1 ... &gt"},
            {"command": "MOM_start_subroutine", "icon": "Event", "docu": ""},
            {"command": "MOM_end_subroutine", "icon": "Event", "docu": ""},
            {"command": "MOM_update_kinematics", "icon": "Event", "docu": "Maps the following legacy kinematics variables to the current kinematics\nvariables, and is required after specifying them: mom_kin_4th_axis_center_offset, mom_kin_5th_axis_center_offset, mom_kin_pivot_gauge_offset\n\n1\nor 0"}



        ],
        "LIB": [
            {"command": "LIB_GE_ui", "icon": "Interface", "docu": "Utility to create UI Nodes/Groups\nUI structure elements are defined in\na CONFIG object like any other property.\nThe CONFIG object is\nof special type 'UI_TREE'\n( LIB_GE_CREATE_obj My_UI_elements {UI_TREE} {....} )\nTo Create\nthe individual UI structure elemets within that CONFIG object you\ncan use this utility.\n(like this you are able to define\na UI element in a single, readable line.\nthe needed Property\nstructure will be generated for you)\n\n\nLIB_GE_ui (name) (type) (id_name) (parent)\n(sequence) (groupstat) (access)"},
            {"command": "LIB_GE_cleanup_list", "icon": "Interface", "docu": "This function filters all duplicates from a list and returns\nthe adjusted list.\n\n\nLIB_GE_cleanup_list (list) (newlist) (remove)"},
            {"command": "LIB_GE_format_path_names", "icon": "Interface", "docu": "This procedure may be used to format pathnames from unix\nformat in windows\nformat and delete double backslash.\n\n\nLIB_GE_format_path_names (pathname) (exclusion) (forced)\n(escape)"},
            {"command": "LIB_GE_sort_value", "icon": "Interface", "docu": "This function return the smallest or biggest value out of\na list.\n\n\nLIB_GE_sort_value (valuelist) (sequence)"},
            {"command": "LIB_GE_is_path", "icon": "Interface", "docu": "This function checks if a given pathname is a valid\ndirectoryname or not.\nThe existence of the directory will not be\nchecked, it's only a logical check.\n\n\nLIB_GE_is_path (path)"},
            {"command": "LIB_GE_is_unc_path", "icon": "Interface", "docu": "This function checks if a given pathname is a valid\nUNC directoryname or not.\nThe existence of the directory will not\nbe checked, it's only a logical check.\n\n\nLIB_GE_is_unc_path (path)"},
            {"command": "LIB_GE_set", "icon": "Interface", "docu": "This function sets a new global variable 'para1' with the\nvalue 'para2'.\nGrace to this function it's not necessary to define\nthe variable with 'global'.\n\n\nLIB_GE_set (para1) (para2)"},
            {"command": "LIB_GE_lappend", "icon": "Interface", "docu": "This function appends the value 'para2' to the global list\n'para1'.\nGrace to this function it's not necessary to define the\nlist 'para1' with 'global'.\n\n\nLIB_GE_lappend (para1) (para2)"},
            {"command": "LIB_GE_ask_type_subtype", "icon": "Interface", "docu": "This function returns the tag, type and subtype of a\ngiven path_name.\n\n\nLIB_GE_ask_type_subtype (path_name) (tag) (type) (subtype)"},
            {"command": "LIB_GE_read_expression_value", "icon": "Interface", "docu": "This function reads expression values out of NX. You may\nspecify the error\nhandling in case when the expression is missing.\n\n\nLIB_GE_read_expression_value\n(expression) (defaultValue) (errorHandling) (formatDef)"},
            {"command": "LIB_GE_message", "icon": "Interface", "docu": "This is an enhanced string handling function which will be\ncalled internally to output text\nmessages to the NC code. It\nis used for outputting comments, nc inserts, user messages and\nmore.\n\n\nLIB_GE_message (message) (option) (forcelinenumber) (replace_special_characters) (wordwrap)"},
            {"command": "LIB_GE_truncate_line", "icon": "Interface", "docu": "This function splits a line into multiple lines if it\noverpasses a defined maximum length.\nThe output command (e.g. MOM_output_literal, MOM_output_text)\nhas to be defined.\n\n\nLIB_GE_truncate_line (command) (leader) (text) (trailer) (length) (suppress)"},
            {"command": "LIB_GE_MSG", "icon": "Interface", "docu": "This function translates postprocessor core messages into the desired language.\n\n\nLIB_GE_MSG\n(text) (possibilities) (replace_special_characters)"},
            {"command": "LIB_GE_string_toupper", "icon": "Interface", "docu": "This function converts a string to upper case. Use this\nfunction when working with multibyte\nstrings as the standard tcl function\n&quot;string toupper&quot; causes problems when converting special\ncharacters.\n\n\nLIB_GE_string_toupper (arg) (check)"},
            {"command": "LIB_GE_string_range_toupper", "icon": "Interface", "docu": "This function converts a part of a string to upper\ncase letters.\n\n\nLIB_GE_string_range_toupper (text) (from) (to)"},
            {"command": "LIB_GE_replace_special_characters", "icon": "Interface", "docu": "This function converts multibyte text into an other character set.\n\n\nLIB_GE_replace_special_characters\n(text) (special) (interaction)"},
            {"command": "LIB_GE_comment_convert", "icon": "Interface", "docu": "This function converts a text in the desired format for\ncomment output to the NC-code.\nThe desired format is controlled with\nthe properties [CONF_GE_msg comment_case] (convert\nto upper or lower case) and\n[CONF_GE_msg\ncomment_replace_character] (replace special characters).\n\n\nLIB_GE_comment_convert (comment)"},
            {"command": "LIB_GE_error_message", "icon": "Interface", "docu": "Issues an error message which will be displayed in a\nmessage box during post run.\nNote: the message is formatted with\nPostConfigurator internal functions and may contain text\nto be translated (see\nLIB_GE_MSG). The setting from [CONF_GE_msg comment_case] will also\nbe applied before\nshowing the message dialog.\n\n\nLIB_GE_error_message (msg1) (msg2) (option) (translation) (force)"},
            {"command": "LIB_GE_abort_message", "icon": "Interface", "docu": "Issues an abort message that causes the post processing to\nstop. A dialog box will be displayed.\nNote: the message is\nformatted with PostConfigurator internal functions and may contain text\nto be\ntranslated (see LIB_GE_MSG). The setting from [CONF_GE_msg comment_case] will also\nbe\napplied before showing the message dialog.\n\n\nLIB_GE_abort_message (msg1) (msg2) (option) (translation)\n(force)"},
            {"command": "LIB_GE_message_dialog", "icon": "Interface", "docu": "Displays a dialog box and waits for user interaction.\nThis function\ncurrently only works on Windows platforms. For other plattforms please\nuse LIB_GE_wish.\n\n\nLIB_GE_message_dialog (args)"},
            {"command": "LIB_GE_wish", "icon": "Interface", "docu": "\n\nLIB_GE_wish (msg) (submsg) (title) (type) (icon) (replace_special_characters)"},
            {"command": "LIB_GE_read_database", "icon": "Interface", "docu": "This function reads an acii file based database in NX-library\nstyle. This function automatically\nopens, reads and closes the file. The\nfunction provides error handling in case when the file is\nnot\nexisting.\n\n\nLIB_GE_read_database (environment) (datafile) (variablelist) (formatdescription) (datedescription) (mode)"},
            {"command": "LIB_GE_copy_var_range", "icon": "Interface", "docu": "This function copies a whole range of global variables (scalars\nand arrays), identified by a prefix,\nto a new range of\nvariables.\nThe new range of variable will be named based on\na defined prefix.\n\n\nLIB_GE_copy_var_range (to_var_prefix) (from_var_prefix)"},
            {"command": "LIB_GE_time", "icon": "Interface", "docu": "This function returns 'time' as formated string, respecting the time\nformat defined in\nthe property [CONF_GE_msg time_format].\n\n\nLIB_GE_time (time)"},
            {"command": "LIB_GE_date", "icon": "Interface", "docu": "This function returns 'date' as formated string, respecting the date\nformat defined in\nthe property [CONF_GE_msg date_format].\n\n\nLIB_GE_date (date)"},
            {"command": "LIB_GE_command_buffer", "icon": "Interface", "snippet": "LIB_GE_command_buffer ${1:Buffername}\nLIB_GE_command_buffer {\n\t$0\n\n} @$1\nLIB_GE_command_buffer_output\n", "docu": "This function is a very powerful command for expert post\ndevelopers, allowing programmers\nto easyly modify output sequences.\n\n\nLIB_GE_command_buffer (args)"},
            {"command": "LIB_GE_command_buffer_output", "icon": "Interface", "docu": "Ends the definition of sequences (set by LIB_GE_command_buffer)\nand outputs them.\n\n\nLIB_GE_command_buffer_output\n(args)"},
            {"command": "LIB_GE_string_append", "icon": "Interface", "docu": "This allows to set 'datatype' attribute of a given property\nin a given CONF-object\n\n\nLIB_GE_string_append (string) (number) (subst)"},
            {"command": "LIB_GE_create_json_array", "icon": "Interface", "docu": "This give you an array list for json back\n\n\nLIB_GE_create_json_array (arg)"},
            {"command": "LIB_GE_command_buffer_edit_insert", "icon": "Interface", "docu": "This function allows to insert an element in a command\nbuffer list.\nIt is used to add more output / actions\nto an existing command buffer at a specific position.\nThe new\ncode to execute has to be referenced by a TagName.\n\n\nLIB_GE_command_buffer_edit_insert\n(proc_name) (buffer_name) (code) (tag) (pos) (ref_tag)"},
            {"command": "LIB_GE_command_buffer_edit_remove", "icon": "Interface", "docu": "This function allows to remove an element from a command\nbuffer.\n\n\nLIB_GE_command_buffer_edit_remove (proc_name) (buffer_name) (args)"},
            {"command": "LIB_GE_command_buffer_edit_move", "icon": "Interface", "docu": "This function allows to resequence the output of a command\nbuffer.\n\n\nLIB_GE_command_buffer_edit_move (proc_name) (buffer_name) (tag) (pos) (ref_tag)"},
            {"command": "LIB_GE_command_buffer_edit_replace", "icon": "Interface", "docu": "This function allows to replace one of the tagged output\nlines of a command buffer\nby an other tagged output\n\n\nLIB_GE_command_buffer_edit_replace (proc_name)\n(buffer_name) (ref_tag) (code) (tag)"},
            {"command": "LIB_GE_command_buffer_edit_append", "icon": "Interface", "docu": "This function allows to append code / output to a\nexisting command buffer\n\n\nLIB_GE_command_buffer_edit_append (proc_name) (buffer_name) (code) (tag)"},
            {"command": "LIB_GE_command_buffer_edit_prepend", "icon": "Interface", "docu": "This function allows to prepend code / output to a\nexisting command buffer\n\n\nLIB_GE_command_buffer_edit_prepend (proc_name) (buffer_name) (code) (tag)"},
            {"command": "LIB_GE_snapshot", "icon": "Interface", "docu": "LIB_GE_snapshot allows to CREATE and REUSE a snapshot of a\ngiven set of global variables\nat a given point of time.\n\n\nLIB_GE_snapshot\n(arg1) (arg2)"},
            {"command": "LIB_GE_CONF_set_property_access", "icon": "Interface", "docu": "This function allows to set the 'access' for a given\nproperty in a given CONF-object\nfor a given license level\n\n(only 'downgrading'\nthe access level is permitted)\n\n\nLIB_GE_CONF_set_property_access (object) (properties) (licenses) (access_code) (forceSet)"},
            {"command": "LIB_GE_CONF_set_property_datatype", "icon": "Interface", "docu": "This allows to set 'datatype' attribute of a given property\nin a given CONF-object\n\n\nLIB_GE_CONF_set_property_datatype (object) (property) (datatype) (forceSet)"},
            {"command": "LIB_GE_CONF_set_property_ui", "icon": "Interface", "docu": "This function allows to set 'ui_parent' and 'ui_sequence' attribute of\na given property in a given CONF-object\nThis can be used\nto reorder common properties and UI_TREE properties as well.\n\n\nLIB_GE_CONF_set_property_ui (object)\n(property) (parent) (seq) (forceSet)"},
            {"command": "LIB_GE_CONF_add_chain", "icon": "Interface", "docu": "This function allows you to define chains.\n\n\nLIB_GE_CONF_add_chain (chain_id) (ui_name) (ui_descr)\n(ui_sequence)"},
            {"command": "LIB_GE_CONF_set_property_options", "icon": "Interface", "docu": "This function allows to manipulate the displayed options of a\ngiven options property in a given CONF-object\nYou can add/insert new\noptions or remove existing ones.\n(It is in postwriters responsibility that\nthe action to a new option is implemented in the\ncode).\n\n\nLIB_GE_CONF_set_property_options (object) (property) (operation) (opt_id) (opt_name) (pos) (forceSet)"},
            {"command": "LIB_CONF_prop_custom_proc_body", "icon": "Interface", "docu": "This function allows to define a custom proc for a\nCONFIG-property directly in the tcl script.\nIf defining the custom proc\nwith the use of this function, the contents of the\ncustom proc will properly be showed in\nthe PostConfigurator UI\n\n\nLIB_CONF_prop_custom_proc_body (code)"},
            {"command": "LIB_CONF_do_prop_custom_proc", "icon": "Interface", "docu": "This function is used to execute a proc body stored\nin a CONFIG objects property\n(e.g. defined in a COMMANDBLOCK object\nin PostConfigurator UI)\n\n\nLIB_CONF_do_prop_custom_proc (obj) (prop) (special_syntax) (start_index)"},
            {"command": "LIB_GE_generate_chain_selection_condition_vars", "icon": "Interface", "docu": "This function is used to initialize the condition variables used\nto display chain selection conditions\nin the UI. By default for\neach chain a selection condition is added (without explicitly calling\nthis function)\n\n\nLIB_GE_generate_chain_selection_condition_vars (number_of_conditions)"},
            {"command": "LIB_FH_format_database", "icon": "Interface", "docu": "This function formats the lines in a given .dat file\nto be exactly aligned per each column.\nThe formatted lines are\nreturned as string list. Optionally the dat file can be\nupdated\ndirectly with the formatted lines.\n\n\nLIB_FH_format_database (filename) (overwrite)"},
            {"command": "LIB_FH_create_directory", "icon": "Interface", "docu": "Creates a new directory if it's not yet existing.\nDirectory can\nbe specified in unix format (directory separator with /) or\nin windows format (separator with  (=escaped backslash)).\n\n\nLIB_FH_create_directory (directory)"},
            {"command": "LIB_FH_search_path_recursively", "icon": "Interface", "docu": "This function iterates through subdirectories, starting at a given path\nand gives back\na list of all found sub directories.\n\n\nLIB_FH_search_path_recursively (folders)\n(dirs)"},
            {"command": "LIB_FH_search_file_glob", "icon": "Interface", "docu": "This function searches for a file in a given directory,\nusing globstyle search.\nThis means that the filename can be specified\nwith wildcards (*).\nThe first match is returned.\n\n\nLIB_FH_search_file_glob (pathname) (filename) (resultname)"},
            {"command": "LIB_FH_file_to_list", "icon": "Interface", "docu": "This function reads a textfile into a string list.\nThe function\ncan be used safely as it opens and closes the\ntextfile automatically and provides\nerrorhandling.\n\n\nLIB_FH_file_to_list (filename) (filename_to_list) (apportion)"},
            {"command": "LIB_FH_file_writable", "icon": "Interface", "docu": "This function checks if a given file is writable or\nnot.\n\n\nLIB_FH_file_writable (file)"},
            {"command": "LIB_FH_list_to_file", "icon": "Interface", "docu": "This function writes the entry of a given string list\nto a text file.\n\n\nLIB_FH_list_to_file (list) (filename) (fileoption)"},
            {"command": "LIB_FH_file_to_list_line_numbers", "icon": "Interface", "docu": "This function reads a textfile into a string list with\na maximum of 'counter' lines.\nThis is the same function as\nLIB_FH_file_to_list, with the option to specify the number of lines\nto be read.\n\n\nLIB_FH_file_to_list_line_numbers (filename) (counter)"},
            {"command": "LIB_FH_create_file", "icon": "Interface", "docu": "Creates a textfile with a given directory and filename. A\ngiven variable or list will be written in the textfile.\n\n\nLIB_FH_create_file\n(filename) (fileoption) (filebody)"},
            {"command": "LIB_FH_cleanup_directory", "icon": "Interface", "docu": "Deletes all files in a given directory.\n\n\nLIB_FH_cleanup_directory (directory) (expression)"},
            {"command": "LIB_FH_open_file", "icon": "Interface", "docu": "This function creates a new or opens an existing file,\nspecified with the argument 'name'\nusing the tcl command 'open' and\nthe specified file access type.\nAfter this command, the function LIB_FH_output_literal\nwrites directly to this file.\nThe file will automatically be closed\nat the end of the post processor run.\n\n\nLIB_FH_open_file (name) (access)"},
            {"command": "LIB_FH_output_literal", "icon": "Interface", "docu": "This function writes text to the last file which was\nopened by LIB_FH_open_file.\nSee there for more information.\n\n\nLIB_FH_output_literal (output)"},
            {"command": "LIB_FH_escape_special_characters", "icon": "Interface", "docu": "This function escapes special characters\n\n\nLIB_FH_escape_special_characters (output)"},
            {"command": "LIB_FH_reverse_escape_special_characters", "icon": "Interface", "docu": "This function reverses escaped strings back to special characters.\nIt is\nthe opposite function to LIB_FH_escape_special_characters.\n\n\nLIB_FH_reverse_escape_special_characters (output)"},
            {"command": "LIB_SPF_abort_postrun", "icon": "Interface", "docu": "This function can be called to abort the postprocessing.\nIt has\nthe same effect as MOM_abort but is faster, clears messages\nand\ndoes a cleanup handling.\n\n\nLIB_SPF_abort_postrun (text) (once)"},
            {"command": "LIB_SPF_pretreatment_add_var", "icon": "Interface", "docu": "Defines an additional variable which should be stored during pretreatment.\nYou\nshould call this function inside a proc with the name\n'LIB_SPF_pt_additional_variables_xxx'\n'xxx' can be any name, e.g. mycustompost -) LIB_SPF_pt_additional_variables_mycustompost.\n\n\nLIB_SPF_pretreatment_add_var (proc_name)\n(var_name) (eventnumber)"},
            {"command": "LIB_SPF_pt_exists", "icon": "Interface", "docu": "Checks whether a pretreatment variable exists or not\n\n\nLIB_SPF_pt_exists (variable) (sequence)\n(path_name)"},
            {"command": "LIB_SPF_pt_exists_not_empty", "icon": "Interface", "docu": "Checks whether a pretreatment variable exists and is not empty\n\n\nLIB_SPF_pt_exists_not_empty\n(variable) (sequence) (path_name)"},
            {"command": "LIB_SPF_get_pretreatment_eventbased", "icon": "Interface", "docu": "This function accesses variables that have been collected in the\npretreatment postprocessor.\nIf a desired variable does not exist, an empty\nstring is returned.\nIt is mostly the same function as LIB_SPF_get_pretreatment,\nenhanced with the option to only\nconsider variables of an specified\nevent\n\n\nLIB_SPF_get_pretreatment_eventbased (event) (variable) (sequence) (path_name)"},
            {"command": "LIB_SPF_get_pretreatment", "icon": "Interface", "docu": "This function accesses variables that have been collected in the\npretreatment postprocessor.\nIf a desired variable does not exist, an empty\nstring is returned.\n\n\nLIB_SPF_get_pretreatment (variable) (sequence) (path_name)"},
            {"command": "LIB_SPF_is_vector", "icon": "Interface", "docu": "This function checks whether a value is a vector or\npoint or another value.\n\n\nLIB_SPF_is_vector (value)"},
            {"command": "LIB_SPF_is_matrix_equal", "icon": "Interface", "docu": "This function compares two matrixes and examines if they are\nequal within a specified tolerance.\n\n\nLIB_SPF_is_matrix_equal (Value1) (Value2) (Tolerance) (Elements)"},
            {"command": "LIB_SPF_is_floating", "icon": "Interface", "docu": "This function checks whether a value is a floating number\nor not.\nThis function also indicates if a value is noted\nwith decimals but holds an integer value.\n\n\nLIB_SPF_is_floating (value)"},
            {"command": "LIB_SPF_is_integer", "icon": "Interface", "docu": "This function detects if a given string represents an integer\nvalue or not.\nBy default the check considers the valid data\ntype format. Optionally it is\npossible to only consider the value\nno matter of the data type.\n\n\nLIB_SPF_is_integer (value) (mode)"},
            {"command": "LIB_SPF_is_number", "icon": "Interface", "docu": "This function checks if a given string represents a number\nin a valid TCL format.\nNote: exponential notation is also considered\nas a valid number if checked mathematically (default).\nOptionally you may\ncheck with the argument &quot;character&quot; wich only validates numbers in\nnormal decimal notation.\n\n\nLIB_SPF_is_number (value) (compared)"},
            {"command": "LIB_SPF_is_no_decimal", "icon": "Interface", "docu": "This function verifies that a given string contains no numbers.\n\n\nLIB_SPF_is_no_decimal\n(value)"},
            {"command": "LIB_SPF_is_empty", "icon": "Interface", "docu": "This function checks if a given string is empty (blanks\nare trimmed out before the check).\n\n\nLIB_SPF_is_empty (value)"},
            {"command": "LIB_SPF_is_part_of_string", "icon": "Interface", "docu": "This function checks if one string is a part of\nanother string.\nThe check is case insensitive, but can optionally be\nset to be case sensitive.\n\n\nLIB_SPF_is_part_of_string (string) (part) (case)"},
            {"command": "LIB_SPF_is_divisible", "icon": "Interface", "docu": "This function checks if a given input value can be\ndivided by 2 (this is the default divider).\nThe check is\ntrue if the divided resulting value is an integer value.\nOptionally\nit is possible to check with another divisor than 2.\n\n\nLIB_SPF_is_divisible\n(value) (divider)"},
            {"command": "LIB_SPF_array_to_vector", "icon": "Interface", "docu": "This function converts an 3 dimensional array into a list.\nIt is the corresponding\nfunction to LIB_SPF_vector_to_array\n\n\nLIB_SPF_array_to_vector (variable) (elements)"},
            {"command": "LIB_SPF_vector_to_array", "icon": "Interface", "docu": "This function converts a string list into an 3 dimensional\narray. It is the corresponding\nfunction to LIB_SPF_array_to_vector.\n\n\nLIB_SPF_vector_to_array (delist) (variable) (elements)"},
            {"command": "LIB_SPF_matrix_to_list", "icon": "Interface", "docu": "This function converts an 9 dimensional matrix into a list.\n\n\nLIB_SPF_matrix_to_list\n(variable) (elements)"},
            {"command": "LIB_SPF_list_reverse", "icon": "Interface", "docu": "This function reverses the order of a list.\n\n\nLIB_SPF_list_reverse (list)"},
            {"command": "LIB_SPF_list_trim_left", "icon": "Interface", "docu": "This function trims empty elements at the beginning of a\nlist.\n\n\nLIB_SPF_list_trim_left (list)"},
            {"command": "LIB_SPF_list_trim_right", "icon": "Interface", "docu": "This function trims empty elements at the end of a\nlist.\n\n\nLIB_SPF_list_trim_right (list)"},
            {"command": "LIB_SPF_list_trim", "icon": "Interface", "docu": "This function trims empty elements at the beginning and the\nend of a list.\n\n\nLIB_SPF_list_trim (list)"},
            {"command": "LIB_SPF_list_trim_elements", "icon": "Interface", "docu": "This function trims each element within a list.\n\n\nLIB_SPF_list_trim_elements (list)"},
            {"command": "LIB_SPF_list_non_common_elements", "icon": "Interface", "docu": "This function returns a list of elements that are not\ncommen in 2 given lists\n\n\nLIB_SPF_list_non_common_elements (list1) (list2)"},
            {"command": "LIB_SPF_list_to_table", "icon": "Interface", "docu": "Formats a string list into a table form. Every column\nis aligned to the longest element of\nthe respective column.\n\n\nLIB_SPF_list_to_table (in)\n(padding) (firstelement) (leader) (as_list)"},
            {"command": "LIB_SPF_eliminate_zero", "icon": "Interface", "docu": "This function formats a decimal number into a specified string\nformat and rounds it to the desired number of decimals.\n\n\nLIB_SPF_eliminate_zero\n(value) (decimal_places) (splitter)"},
            {"command": "LIB_SPF_eliminate_zero_inline", "icon": "Interface", "docu": "This function does the same task as LIB_SPF_eliminate_zero but applies\non every decimal\nexpression within a line/string list.\n\n\nLIB_SPF_eliminate_zero_inline (line) (word_seperator) (max_decimal_place)\n(iterationen)"},
            {"command": "LIB_SPF_add_warning", "icon": "Interface", "docu": "This function adds a warning message to the post process\ninfo window.\nThe configuration object 'CONF_SPF_warning' allows to set how warnings\nare being handled.\n\n\nLIB_SPF_add_warning (text) (mode) (function)"},
            {"command": "LIB_SPF_read_tool_attribute", "icon": "Interface", "docu": "This function reads tool attribute data from the active tool\nlibrary.\nInternally the standard MOM-command MOM_ask_library_attributes is used, but enriched with\nerror\nhandling.\n\n\nLIB_SPF_read_tool_attribute (attribute) (default) (ind) (cutter_libref)"},
            {"command": "LIB_SPF_read_part_attribute", "icon": "Interface", "docu": "This function reads part attribute data from the active part.\nThe\nfunction has error handling.\n\n\nLIB_SPF_read_part_attribute (attribute) (default) (ind) (clear)"},
            {"command": "LIB_SPF_read_oper_attribute", "icon": "Interface", "docu": "This function reads operation attribute data from the current operation.\nThe\nfunction has error handling.\n\n\nLIB_SPF_read_oper_attribute (attribute) (default) (ind) (clear)"},
            {"command": "LIB_SPF_read_programview_attribute", "icon": "Interface", "docu": "This function reads programview attribute data.\nThe function has error handling.\n\n\nLIB_SPF_read_programview_attribute\n(attribute) (default) (ind) (clear)"},
            {"command": "LIB_SPF_extract_udecode", "icon": "Interface", "docu": "This function returns the option number of an ude, provided\nthat the options start with\na number (an id) and are\nfollowed by - or _\nThis helps you creating language independant\nUDE's as we only consider the id and not the\nname\nafter the - or _\n\n\nLIB_SPF_extract_udecode (ude) (name)"},
            {"command": "LIB_SPF_round", "icon": "Interface", "docu": "This function returns the rounded value of a given value.\nThe\nrounding precision is based on the given precision.\n\n\nLIB_SPF_round (value) (precision)"},
            {"command": "LIB_SPF_rad_to_deg", "icon": "Interface", "docu": "This function converts an angular value in radians to an\nangular value in degrees.\n\n\nLIB_SPF_rad_to_deg (angrad)"},
            {"command": "LIB_SPF_deg_to_rad", "icon": "Interface", "docu": "This function converts an angular value in degrees to an\nangular value in radians.\n\n\nLIB_SPF_deg_to_rad (angdeg)"},
            {"command": "LIB_SPF_convert_decimal_to_binary", "icon": "Interface", "docu": "This function converts decimal values to binary values.\n\n\nLIB_SPF_convert_decimal_to_binary (decimal)"},
            {"command": "LIB_SPF_convert_hex_to_string", "icon": "Interface", "docu": "This function converts a string to a hexadecimal value.\n\nThis function\nconverts an hexadecimal value to a string.\n\n\nLIB_SPF_convert_hex_to_string (hex)"},
            {"command": "LIB_SPF_convert_to_md5", "icon": "Interface", "docu": "This function converts a string to a md5 value.\n\n\nLIB_SPF_convert_to_md5 (msg)"},
            {"command": "LIB_SPF_convert_point", "icon": "Interface", "docu": "This function converts the current position (mom_pos and mom_alt_pos) into\nthe desired kinematic system.\nThe mom_out_angle_pos is calculated with the limits\nin the defined configuration, taking into account the\nlimit and mom_kin_(4)5th_axis_direction\nvariables.\n\n\nLIB_SPF_convert_point (option)"},
            {"command": "LIB_SPF_convert_binary_to_decimal", "icon": "Interface", "docu": "This function converts numbers in binary format to their corresponcance\nin decimal format.\n\n\nLIB_SPF_convert_binary_to_decimal (binary)"},
            {"command": "LIB_SPF_exists_address", "icon": "Interface", "docu": "This function checks whether the given address is defined in\none of the currently sourced definition files.\nIn order to use\nthis function you have to activate the property [CONF_SPF_advanced_settings parse_def_file].\n\n\nLIB_SPF_exists_address\n(address) (supress_error)"},
            {"command": "LIB_SPF_ask_address", "icon": "Interface", "docu": "This function gives you detailled access to the definition elements\nof an address.\nIn order to use this function you have\nto activate the property [CONF_SPF_advanced_settings parse_def_file].\n\n\nLIB_SPF_ask_address (address) (parameter) (supress_error)"},
            {"command": "LIB_SPF_exists_format", "icon": "Interface", "docu": "This function checks if the given format name is defined\nin one of the currently sourced definition files.\nIn order to\nuse this function you have to activate the property [CONF_SPF_advanced_settings\nparse_def_file].\n\n\nLIB_SPF_exists_format (format) (supress_error)"},
            {"command": "LIB_SPF_ask_format", "icon": "Interface", "docu": "This function reads the format definition of the given format\nname out of of the currently sourced definition files.\nIn order\nto use this function you have to activate the property\n[CONF_SPF_advanced_settings parse_def_file].\n\n\nLIB_SPF_ask_format (format) (supress_error)"},
            {"command": "LIB_SPF_exists_block_template", "icon": "Interface", "docu": "This function checks if the given block template name is\ndefined in one of the currently sourced definition files.\nIn order\nto use this function you have to activate the property\n[CONF_SPF_advanced_settings parse_def_file].\n\n\nLIB_SPF_exists_block_template (block_template) (supress_error)"},
            {"command": "LIB_SPF_ask_block_template", "icon": "Interface", "docu": "This function gives you detailled access to the definition elements\nof a block template.\nIn order to use this function you\nhave to activate the property [CONF_SPF_advanced_settings parse_def_file].\n\n\nLIB_SPF_ask_block_template (block_template) (parameter) (supress_error)"},
            {"command": "LIB_SPF_call_cycle", "icon": "Interface", "docu": "This function writes a machining cycle call in the NC\ncode by considering the respective\nformat settings in the PostConfigurator user\ninterface. It is mainly used for Heidenhain\nmultiline cycle output and\nfor Sinumerik cycle output.\n\n\nLIB_SPF_call_cycle (cycle) (prefix) (exclusion) (seperator) (trailer)"},
            {"command": "LIB_SPF_modulo_sign", "icon": "Interface", "docu": "Used to detect sign rotary motion with modulo axis\n\n\nLIB_SPF_modulo_sign (first)\n(second) (max_value)"},
            {"command": "LIB_SPF_atan_polar", "icon": "Interface", "docu": "Utility to convert cartesian coordinate to polar\n\n\nLIB_SPF_atan_polar (v1) (v2)"},
            {"command": "LIB_SPF_ask_delta_4th_or_5th", "icon": "Interface", "docu": "This function returns the delta degrees rotation of the axis_no(4\nor 5)\n\n\nLIB_SPF_ask_delta_4th_or_5th (axis_no)"},
            {"command": "LIB_SPF_ask_smaller_of_4th_5th", "icon": "Interface", "docu": "This function returns the shortest delta degrees rotation out of\n4th and 5th axis.\n\n\nLIB_SPF_ask_smaller_of_4th_5th (axis_no)"},
            {"command": "LIB_SPF_set_op_tool_param_condition", "icon": "Interface", "docu": "Utility to check the state of global variables at specific\nposition in the postrun\n\n\nLIB_SPF_set_op_tool_param_condition (param) (args)"},
            {"command": "LIB_SPF_execute_op_tool_param_condition", "icon": "Interface", "docu": "This function executes the predefined condition checks, set in LIB_SPF_op_tool_param_condition\nand LIB_SPF_custom_op_tool_param_condition.\nThe function can be called in any proc. The\nargument has to be the name of the calling proc.\n\n\nLIB_SPF_execute_op_tool_param_condition\n(calling_proc) (position)"},
            {"command": "LIB_SPF_get_partnname", "icon": "Interface", "docu": "This function returns the partname.\n\n\nLIB_SPF_get_partnname (calling_proc) (position)"},
            {"command": "LIB_SPF_reset_motions_to_zero", "icon": "Interface", "docu": "This command reset the values of the axis to zero.\nThis is useful to calculate the kinematic\nvalues of the next\noperation based from zero.\n\n\nLIB_SPF_reset_motions_to_zero (option)"},
            {"command": "LIB_DC_complete_formatline", "icon": "Interface", "docu": "Formats a string with repeated characters at a given number.\n\n\nLIB_DC_complete_formatline\n(string) (character)"},
            {"command": "LIB_DC_format_string", "icon": "Interface", "docu": "Formats a string according to a given pattern witch describes\ncolumns. It defines the length of an\nstring element per column,\nthe alignment and also separators between columns.\n\n\nLIB_DC_format_string (string) (character) (ellipsis)"},
            {"command": "LIB_DC_check_variable", "icon": "Interface", "docu": "Checks if a given expression is an existing variable and\ngives back its current value.\nIf it is not an existing\nvariable it gives back the defaulttext\n\n\nLIB_DC_check_variable (variable) (defaulttext)"},
            {"command": "LIB_DC_time_format", "icon": "Interface", "docu": "Formats minute values into time format hh:min:sec\n\n\nLIB_DC_time_format (arg1)"},
            {"command": "LIB_DC_escape_string", "icon": "Interface", "docu": "This function escapes an input string in order to be\nfurther used in tcl language\n\n\nLIB_DC_escape_string (arg1)"},
            {"command": "LIB_DC_ellipsis_character", "icon": "Interface", "docu": "This function generates a shortened representation of a given string.\nIt is mostly used for\ndisplaying long filenames and paths.\n\n\nLIB_DC_ellipsis_character (string)\n(length) (postion) (placeholder)"},
            {"command": "LIB_RETURN_move", "icon": "Interface", "docu": "Writes return motions to the NC-code. Settings for home motions\n(CONF_CTRL_moves return_mode)\nare taken into consideration for the output format of\nthe return motions.\n\n\nLIB_RETURN_move (Addresses) (property)"},
            {"command": "LIB_main_origin_call", "icon": "Interface", "docu": "Writes the active main origin to the NC-code, provided that\nthe property\n[CONF_CTRL_origin use_main] is set to 'On'.\n\n\nLIB_main_origin_call (offset_nbr) (create)"},
            {"command": "LIB_ISV_ini_get_env_dir_info", "icon": "Interface", "docu": "This function returns the path, defined with the environment variable\nUGII_CAM_CSE_USER_DIR.\nIf the variable is not set it returns an empty\nstring and displays an information in the listing window.\n\n\nLIB_ISV_ini_get_env_dir_info (mode)"},
            {"command": "LIB_output_local_zero_offset", "icon": "Interface", "docu": "Output the local origin reset and definition only when needed\n(CYCL DEF 7)\n\n\nLIB_output_local_zero_offset (Addresses) (property)"},
            {"command": "LIB_start_of_program_blk_form", "icon": "Interface", "docu": "This function outputs the BLK FORM definition for simulation purposes\non the heidenhain controller.\nDefault values are -20 inches in XYZ\nup to +20 inches respectively -500mm up to +500mm.\nBlock form\nmay be defined by an UDE with two points. mom_blk_point_1\ndefines the lower left point while\nmom_blk_point_2 defines the upper right\npoint.\nThe whole procedure may be copied to the service layer\nfor customization purposes.\n\n\nLIB_start_of_program_blk_form (Addresses) (property)"},
            {"command": "LIB_CTRL_custom_cycle800_auto_set_kin", "icon": "Interface", "docu": "Allows to define the kinematics used for cycle800 machine/customer specific\nThe\nkinematics for a specific CYCLE800 _MODE (39,54...) can be implemented\n\nThe\nproc is called from LIB_SPF_KINEMATICS_set_plane_output_kin_ENTRY and gets\n[CONF_S840D_cycle800 _MODE] as argument\n\nThe\nproc returns 0 if the specific mode is not treaten\nin the proc, otherwise 1\n\n\nLIB_CTRL_custom_cycle800_auto_set_kin (mode)"},
            {"command": "LIB_CTRL_custom_cycle800_plane_output_kin", "icon": "Interface", "docu": "Allows to define the kinematics used for cycle800 machine/customer specific\nThe\nkinematics for a specific CYCLE800 _MODE (39,54...) can be implemented\n\nThe\nproc is called from LIB_CSYS_plane_output_init and gets\n[CONF_S840D_cycle800 _MODE] as argument\n\nThe\nproc returns 0 if the specific mode is not treaten\nin the proc, otherwise 1\n\n\nLIB_CTRL_custom_cycle800_plane_output_kin (mode)"}

        ],
        "package ": [
            {"command": "require ", "icon": "Method", "docu": "This command is typically invoked by Tcl code that wishes to use a particular version of a particular package. The arguments indicate which package is wanted, and the command ensures that a suitable version of the package is loaded into the interpreter. If the command succeeds, it returns the version number that is loaded; otherwise it generates an error."},
            {"command": "provide ", "icon": "Method", "docu": "This command is invoked to indicate that version version of package package is now present in the interpreter."}
        ],
        "string ": [
            {"command": "trim ", "icon": "Method", "docu": "Returns a value equal to string except that any leading or trailing characters present in the string given by chars are removed. If chars is not specified then white space is removed\n\nstring trim (string) (chars)"},
            {"command": "trimleft ", "icon": "Method", "docu": "Returns a value equal to string except that any leading characters present in the string given by chars are removed. If chars is not specified then white space is removed\n\nstring trim (string) (chars)"},
            {"command": "trimright ", "icon": "Method", "docu": "Returns a value equal to string except that any trailing characters present in the string given by chars are removed. If chars is not specified then white space is removed\n\nstring trim (string) (chars)"},
            {"command": "first ", "icon": "Method", "docu": ""},
            {"command": "last ", "icon": "Method", "docu": ""},
            {"command": "wordstart ", "icon": "Method", "docu": ""},
            {"command": "wordend ", "icon": "Method", "docu": ""},
            {"command": "compare ", "icon": "Method", "snippet": "compare ${1:string1} ${2:string1}$0", "docu": "compares string to another string"},
            {"command": "index ", "icon": "Method", "docu": "gives back the index of a character or string"},
            {"command": "reverse ", "icon": "Method", "docu": "Returns a string that is the same length as string but with its characters in the reverse order."},
            {"command": "tolower ", "icon": "Method", "snippet": "tolower ${1:string}$0", "docu": "converts the string in lower case"},
            {"command": "toupper ", "icon": "Method", "snippet": "toupper ${1:string}$0", "docu": "converts the string in upper case"},
            {"command": "totitle ", "icon": "Method", "docu": "Returns a value equal to string except that the first character in string is converted to its Unicode title case variant"},
            {"command": "length ", "icon": "Method", "docu": "Returns a decimal string giving the number of characters in string."},
            {"command": "equal ", "icon": "Method", "docu": ""},
            {"command": "repeat ", "icon": "Method", "docu": "Returns string repeated count number of times.\n\nstring repeat (string) (count)"},
            {"command": "range ", "icon": "Method", "docu": "Returns a range of consecutive characters from string, starting with the character whose index is first and ending with the character whose index is last.\n\nstring range (string) (first) (last)"},
            {"command": "replace ", "icon": "Method", "docu": "Removes a range of consecutive characters from string, starting with the character whose index is first and ending with the character whose index is last.\n\nstring replace (string) (first) (last) (newstring)"},
            {"command": "map ", "icon": "Method", "docu": "Replaces substrings in string based on the key-value pairs in mapping. mapping is a list of key value key value ...\n\nstring map {(old) (new) (old) (new)} (string)"},
            {"command": "is lower ", "icon": "Method", "docu": "Any of the valid string is lower case"},
            {"command": "is space ", "icon": "Method", "docu": "the String is a space character"},
            {"command": "is upper ", "icon": "Method", "docu": "Any of the valid string is Upper case"},
            {"command": "is ascii ", "icon": "Method", "docu": "Any Unicode character."},
            {"command": "is integer ", "icon": "Method", "docu": "Any of the valid string is a integer"},
            {"command": "is alnum ", "icon": "Method", "docu": "Any Unicode alphabet or digit character."},
            {"command": "is digit ", "icon": "Method", "docu": "Any Unicode digit character."},
            {"command": "is double ", "icon": "Method", "docu": "is a double"},
            {"command": "is alpha ", "icon": "Method", "docu": "Any Unicode alphabet character"},
            {"command": "match ", "icon": "Method", "docu": "Determine whether pattern matches string, returning return 1 if it does, 0 if it doesn't.\n\nstring match (pattern) (string)"}
        ],
        "file ": [
            {"command": "split ", "icon": "Method", "docu": "Returns a list whose elements are the path components in name. The first element of the list will have the same path type as name. All other elements will be relative. Path separators will be discarded unless they are needed to ensure that an element is unambiguously relative"},
            {"command": "rename ", "icon": "Method", "docu": "The first form takes the file or directory specified by pathname source and renames it to target, moving the file if the pathname target specifies a name in a different directory. If target is an existing directory, then the second form is used. The second form moves each source file or directory into the directory targetDir. Existing files will not be overwritten unless the -force option is specified.\n\nfile rename (-force) (source) (target)"},
            {"command": "dirname ", "icon": "Method", "docu": "Returns a name comprised of all of the path components in name excluding the last element."},
            {"command": "isdirectory ", "icon": "Method", "docu": "Returns 1 if file name is a directory, 0 otherwise."},
            {"command": "join ", "icon": "Method", "docu": "Takes one or more file names and combines them, using the correct path separator for the current platform. If a particular name is relative, then it will be joined to the previous file name argument. Otherwise, any earlier arguments will be discarded, and joining will proceed from the current argument."},
            {"command": "exists ", "icon": "Method", "docu": "Returns 1 if file name exists and the current user has search privileges for the directories leading to it, 0 otherwise."},
            {"command": "type ", "icon": "Method", "docu": ""},
            {"command": "delete ", "icon": "Method", "docu": "Removes the file or directory specified by each pathname argument. Non-empty directories will be removed only if the -force option is specified.\n\nfile delete (-force) (pathname)"},
            {"command": "size ", "icon": "Method", "docu": "Returns a decimal string giving the size of file name in bytes. If the file does not exist or its size cannot be queried then an error is generated."},
            {"command": "readable ", "icon": "Method", "docu": "Returns 1 if file name is readable by the current user, 0 otherwise."},
            {"command": "writeable ", "icon": "Method", "docu": "Returns 1 if file name is writable by the current user, 0 otherwise.."},
            {"command": "copy ", "icon": "Method", "docu": "The first form makes a copy of the file or directory source under the pathname target. If target is an existing directory, then the second form is used. The second form makes a copy inside targetDir of each source file listed. If a directory is specified as a source, then the contents of the directory will be recursively copied into targetDir. Existing files will not be overwritten unless the -force option is specified\n\nfile copy (-force) (source) (target)"},
            {"command": "mkdir ", "icon": "Method", "docu": "Creates each directory specified."},
            {"command": "tail ", "icon": "Method", "docu": "Returns all of the characters in the last filesystem component of name. Any trailing directory separator in name is ignored. If name contains no separators then returns name"},
            {"command": "extension ", "icon": "Method", "docu": "Returns all of the characters in name after and including the last dot in the last element of name. If there is no dot in the last element of name then returns the empty string."},
            {"command": "isfile ", "icon": "Method", "docu": "Returns 1 if file name is a regular file, 0 otherwise."}
        ],
        "format %": [
            {"command": "%d", "icon": "Method", "snippet": "d", "triggers":["%"], "docu": "Convert integer to signed decimal string."},
            {"command": "%u", "icon": "Method", "snippet": "u", "triggers":["%"], "docu": "Convert integer to unsigned decimal string."},
            {"command": "%i", "icon": "Method", "snippet": "i", "triggers":["%"], "docu": "Convert integer to signed decimal string (equivalent to d)."},
            {"command": "%o", "icon": "Method", "snippet": "o", "triggers":["%"], "docu": "Convert integer to unsigned octal string."},
            {"command": "%c", "icon": "Method", "snippet": "c", "triggers":["%"], "docu": "Convert integer to the Unicode character it represents."},
            {"command": "%s", "icon": "Method", "snippet": "s", "triggers":["%"], "docu": "No conversion; just insert string."},
            {"command": "%f", "icon": "Method", "snippet": ".2f", "triggers":["%"], "docu": "Convert number to signed decimal string of the form xx.yyy, where the number of y's is determined by the precision (default: 6). If the precision is 0 then no decimal point is output."}
        ],
        "clock ": [
            {"command": "scan", "icon": "Method", "snippet": "scan ${1:variable} -format {${2:%b} ${3:%d}, ${4:%Y}}$0",  "docu": "Scans a time that is expressed as a character string and produces an integer number of seconds"},
            {"command": "format", "icon": "Method", "snippet": "format ${1:variable} -format ${2:%H}:${3:%M}:${4:%S}$0",  "docu": "Formats a time that is expressed as an integer number of seconds into a format intended for consumption by users or external programs."},
            {"command": "seconds", "icon": "Method", "docu": "Returns the current time as an integer number of seconds."}
        ],
        "-format ": [
            {"command": "%a", "icon": "Snippet", "snippet": "a", "triggers": ["%"], "docu": "Abbreviated weekday name (Mon, Tue, etc.)"},
            {"command": "%A", "icon": "Snippet", "snippet": "A", "triggers": ["%"],  "docu": "Full weekday name (Monday, Tuesday, etc."},
            {"command": "%b", "icon": "Snippet", "snippet": "b", "triggers": ["%"],  "docu": "Abbreviated month name (Jan, Feb, etc."},
            {"command": "%B", "icon": "Snippet", "snippet": "B", "triggers": ["%"],  "docu": "Full month name (January, February, etc."},
            {"command": "%d", "icon": "Snippet", "snippet": "d", "triggers": ["%"],  "docu": "Day of month"},
            {"command": "%j", "icon": "Snippet", "snippet": "j", "triggers": ["%"],  "docu": "Julian day of year"},
            {"command": "%m", "icon": "Snippet", "snippet": "m", "triggers": ["%"],  "docu": "Month number (01-12)"},
            {"command": "%y", "icon": "Snippet", "snippet": "y", "triggers": ["%"],  "docu": "Year in century"},
            {"command": "%Y", "icon": "Snippet", "snippet": "Y", "triggers": ["%"],  "docu": "Year with 4 digits"},
            {"command": "%H", "icon": "Snippet", "snippet": "H", "triggers": ["%"],  "docu": "Hour (00-23)"},
            {"command": "%I", "icon": "Snippet", "snippet": "I", "triggers": ["%"],  "docu": "Hour (00-12)"},
            {"command": "%M", "icon": "Snippet", "snippet": "M", "triggers": ["%"],  "docu": "Minutes (00-59)"},
            {"command": "%S", "icon": "Snippet", "snippet": "S", "triggers": ["%"],  "docu": "Seconds(00-59)"},
            {"command": "%p", "icon": "Snippet", "snippet": "p", "triggers": ["%"],  "docu": "PM or AM"},
            {"command": "%D", "icon": "Snippet", "snippet": "D", "triggers": ["%"],  "docu": "Date as %m/%d/%y"},
            {"command": "%r", "icon": "Snippet", "snippet": "r", "triggers": ["%"],  "docu": "Time as %I:%M:%S %p"},
            {"command": "%R", "icon": "Snippet", "snippet": "R", "triggers": ["%"],  "docu": "Time as %I:%M"},
            {"command": "%T", "icon": "Snippet", "snippet": "T", "triggers": ["%"],  "docu": "Time as %I:%M:%S"},
            {"command": "%Z", "icon": "Snippet", "snippet": "Z", "triggers": ["%"],  "docu": "Time Zone Name"}
        ],
        "info ": [
            {"command": "exists ", "icon": "Method",  "docu": "Returns 1 if the variable named varName exists in the current context (either as a global or local variable) and has been defined by being given a value, returns 0 otherwise."},
            {"command": "script ", "icon": "Method",  "docu": "returns the name of the innermost file being processed."},
            {"command": "body ", "icon": "Method",  "docu": "Returns the body of procedure procname."},
            {"command": "commands ", "icon": "Method",  "docu": "If pattern is not specified, returns a list of names of all the Tcl commands visible.If pattern is specified, only those names matching pattern are returned.\n\ninfo commands (pattern)"},
            {"command": "args ", "icon": "Method",  "docu": "Returns a list containing the names of the arguments to procedure procname, in order."},
            {"command": "default ", "icon": "Method",  "docu": "Procname must be the name of a Tcl command procedure and arg must be the name of an argument to that procedure. If arg does not have a default value then the command returns 0. Otherwise it returns 1 and places the default value of arg into variable varname.\n\ninfo default (procname) (args) (varname)"},
            {"command": "errorstack ", "icon": "Method",  "docu": "Returns, in a form that is programmatically easy to parse, the function names and arguments at each level from the call stack of the last error in the given interp, or in the current one if not specified."},
            {"command": "globals ", "icon": "Method",  "docu": "If pattern is not specified, returns a list of all the names of currently-defined global variables."},
            {"command": "procs ", "icon": "Method",  "docu": "If pattern is not specified, returns a list of all the names of Tcl command procedures in the current namespace. If pattern is specified, only those procedure names in the current namespace matching pattern are returned.\n\nindo procs (pattern)"},
            {"command": "vars ", "icon": "Method",  "docu": "If pattern is not specified, returns a list of all the names of currently-visible variables. This includes locals and currently-visible globals. If pattern is specified, only those names matching pattern are returned.\n\ninfo vars (pattern)"},
            {"command": "version ", "icon": "Method",  "docu": "Returns the value of the global variable tcl_version, which holds the major and minor version of the Tcl library by default."}
        ],
        "array ": [
            {"command": "exists ", "icon": "Method",  "docu": "array exists indicates whether a variable exists in an array\nReturns 1 if arrayName is an array variable, or 0 if there is no variable by that name or if the variable is not an array variable."},
            {"command": "get ", "icon": "Method",  "docu": "array get retrieves values in an array.\n\narray get (arrayName) (pattern)"},
            {"command": "names ", "icon": "Method",  "docu": "array names retrieves the names of keys in an array.\n\narray names (arrayName) (mode) (pattern)"},
            {"command": "set ", "icon": "Method",  "docu": "array set sets values in an array.\n\narray set (arrayName) (dictionary)"},
            {"command": "size ", "icon": "Method",  "docu": "array size (arrayName)"},
            {"command": "unset ", "icon": "Method",  "docu": "array unset unsets variables in an array."}
        ]

    }
}
